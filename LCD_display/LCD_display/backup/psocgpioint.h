/******************************************************************************
*  Generated by PSoC Designer 5.4.2946
******************************************************************************/
#include <m8c.h>
// DATA address and mask defines
#pragma	ioport	DATA_Data_ADDR:	0x0
BYTE			DATA_Data_ADDR;
#pragma	ioport	DATA_DriveMode_0_ADDR:	0x100
BYTE			DATA_DriveMode_0_ADDR;
#pragma	ioport	DATA_DriveMode_1_ADDR:	0x101
BYTE			DATA_DriveMode_1_ADDR;
#pragma	ioport	DATA_DriveMode_2_ADDR:	0x3
BYTE			DATA_DriveMode_2_ADDR;
#pragma	ioport	DATA_GlobalSelect_ADDR:	0x2
BYTE			DATA_GlobalSelect_ADDR;
#pragma	ioport	DATA_IntCtrl_0_ADDR:	0x102
BYTE			DATA_IntCtrl_0_ADDR;
#pragma	ioport	DATA_IntCtrl_1_ADDR:	0x103
BYTE			DATA_IntCtrl_1_ADDR;
#pragma	ioport	DATA_IntEn_ADDR:	0x1
BYTE			DATA_IntEn_ADDR;
#define DATA_MASK 0x2
#pragma	ioport	DATA_MUXBusCtrl_ADDR:	0x1d8
BYTE			DATA_MUXBusCtrl_ADDR;
// Sensor_RST address and mask defines
#pragma	ioport	Sensor_RST_Data_ADDR:	0x0
BYTE			Sensor_RST_Data_ADDR;
#pragma	ioport	Sensor_RST_DriveMode_0_ADDR:	0x100
BYTE			Sensor_RST_DriveMode_0_ADDR;
#pragma	ioport	Sensor_RST_DriveMode_1_ADDR:	0x101
BYTE			Sensor_RST_DriveMode_1_ADDR;
#pragma	ioport	Sensor_RST_DriveMode_2_ADDR:	0x3
BYTE			Sensor_RST_DriveMode_2_ADDR;
#pragma	ioport	Sensor_RST_GlobalSelect_ADDR:	0x2
BYTE			Sensor_RST_GlobalSelect_ADDR;
#pragma	ioport	Sensor_RST_IntCtrl_0_ADDR:	0x102
BYTE			Sensor_RST_IntCtrl_0_ADDR;
#pragma	ioport	Sensor_RST_IntCtrl_1_ADDR:	0x103
BYTE			Sensor_RST_IntCtrl_1_ADDR;
#pragma	ioport	Sensor_RST_IntEn_ADDR:	0x1
BYTE			Sensor_RST_IntEn_ADDR;
#define Sensor_RST_MASK 0x4
#pragma	ioport	Sensor_RST_MUXBusCtrl_ADDR:	0x1d8
BYTE			Sensor_RST_MUXBusCtrl_ADDR;
// WR address and mask defines
#pragma	ioport	WR_Data_ADDR:	0x0
BYTE			WR_Data_ADDR;
#pragma	ioport	WR_DriveMode_0_ADDR:	0x100
BYTE			WR_DriveMode_0_ADDR;
#pragma	ioport	WR_DriveMode_1_ADDR:	0x101
BYTE			WR_DriveMode_1_ADDR;
#pragma	ioport	WR_DriveMode_2_ADDR:	0x3
BYTE			WR_DriveMode_2_ADDR;
#pragma	ioport	WR_GlobalSelect_ADDR:	0x2
BYTE			WR_GlobalSelect_ADDR;
#pragma	ioport	WR_IntCtrl_0_ADDR:	0x102
BYTE			WR_IntCtrl_0_ADDR;
#pragma	ioport	WR_IntCtrl_1_ADDR:	0x103
BYTE			WR_IntCtrl_1_ADDR;
#pragma	ioport	WR_IntEn_ADDR:	0x1
BYTE			WR_IntEn_ADDR;
#define WR_MASK 0x8
#pragma	ioport	WR_MUXBusCtrl_ADDR:	0x1d8
BYTE			WR_MUXBusCtrl_ADDR;
// RD address and mask defines
#pragma	ioport	RD_Data_ADDR:	0x0
BYTE			RD_Data_ADDR;
#pragma	ioport	RD_DriveMode_0_ADDR:	0x100
BYTE			RD_DriveMode_0_ADDR;
#pragma	ioport	RD_DriveMode_1_ADDR:	0x101
BYTE			RD_DriveMode_1_ADDR;
#pragma	ioport	RD_DriveMode_2_ADDR:	0x3
BYTE			RD_DriveMode_2_ADDR;
#pragma	ioport	RD_GlobalSelect_ADDR:	0x2
BYTE			RD_GlobalSelect_ADDR;
#pragma	ioport	RD_IntCtrl_0_ADDR:	0x102
BYTE			RD_IntCtrl_0_ADDR;
#pragma	ioport	RD_IntCtrl_1_ADDR:	0x103
BYTE			RD_IntCtrl_1_ADDR;
#pragma	ioport	RD_IntEn_ADDR:	0x1
BYTE			RD_IntEn_ADDR;
#define RD_MASK 0x20
#pragma	ioport	RD_MUXBusCtrl_ADDR:	0x1d8
BYTE			RD_MUXBusCtrl_ADDR;
// Sensor_SET address and mask defines
#pragma	ioport	Sensor_SET_Data_ADDR:	0x0
BYTE			Sensor_SET_Data_ADDR;
#pragma	ioport	Sensor_SET_DriveMode_0_ADDR:	0x100
BYTE			Sensor_SET_DriveMode_0_ADDR;
#pragma	ioport	Sensor_SET_DriveMode_1_ADDR:	0x101
BYTE			Sensor_SET_DriveMode_1_ADDR;
#pragma	ioport	Sensor_SET_DriveMode_2_ADDR:	0x3
BYTE			Sensor_SET_DriveMode_2_ADDR;
#pragma	ioport	Sensor_SET_GlobalSelect_ADDR:	0x2
BYTE			Sensor_SET_GlobalSelect_ADDR;
#pragma	ioport	Sensor_SET_IntCtrl_0_ADDR:	0x102
BYTE			Sensor_SET_IntCtrl_0_ADDR;
#pragma	ioport	Sensor_SET_IntCtrl_1_ADDR:	0x103
BYTE			Sensor_SET_IntCtrl_1_ADDR;
#pragma	ioport	Sensor_SET_IntEn_ADDR:	0x1
BYTE			Sensor_SET_IntEn_ADDR;
#define Sensor_SET_MASK 0x40
#pragma	ioport	Sensor_SET_MUXBusCtrl_ADDR:	0x1d8
BYTE			Sensor_SET_MUXBusCtrl_ADDR;
// CS address and mask defines
#pragma	ioport	CS_Data_ADDR:	0x0
BYTE			CS_Data_ADDR;
#pragma	ioport	CS_DriveMode_0_ADDR:	0x100
BYTE			CS_DriveMode_0_ADDR;
#pragma	ioport	CS_DriveMode_1_ADDR:	0x101
BYTE			CS_DriveMode_1_ADDR;
#pragma	ioport	CS_DriveMode_2_ADDR:	0x3
BYTE			CS_DriveMode_2_ADDR;
#pragma	ioport	CS_GlobalSelect_ADDR:	0x2
BYTE			CS_GlobalSelect_ADDR;
#pragma	ioport	CS_IntCtrl_0_ADDR:	0x102
BYTE			CS_IntCtrl_0_ADDR;
#pragma	ioport	CS_IntCtrl_1_ADDR:	0x103
BYTE			CS_IntCtrl_1_ADDR;
#pragma	ioport	CS_IntEn_ADDR:	0x1
BYTE			CS_IntEn_ADDR;
#define CS_MASK 0x80
#pragma	ioport	CS_MUXBusCtrl_ADDR:	0x1d8
BYTE			CS_MUXBusCtrl_ADDR;
// SDA address and mask defines
#pragma	ioport	SDA_Data_ADDR:	0x4
BYTE			SDA_Data_ADDR;
#pragma	ioport	SDA_DriveMode_0_ADDR:	0x104
BYTE			SDA_DriveMode_0_ADDR;
#pragma	ioport	SDA_DriveMode_1_ADDR:	0x105
BYTE			SDA_DriveMode_1_ADDR;
#pragma	ioport	SDA_DriveMode_2_ADDR:	0x7
BYTE			SDA_DriveMode_2_ADDR;
#pragma	ioport	SDA_GlobalSelect_ADDR:	0x6
BYTE			SDA_GlobalSelect_ADDR;
#pragma	ioport	SDA_IntCtrl_0_ADDR:	0x106
BYTE			SDA_IntCtrl_0_ADDR;
#pragma	ioport	SDA_IntCtrl_1_ADDR:	0x107
BYTE			SDA_IntCtrl_1_ADDR;
#pragma	ioport	SDA_IntEn_ADDR:	0x5
BYTE			SDA_IntEn_ADDR;
#define SDA_MASK 0x20
#pragma	ioport	SDA_MUXBusCtrl_ADDR:	0x1d9
BYTE			SDA_MUXBusCtrl_ADDR;
// SCL address and mask defines
#pragma	ioport	SCL_Data_ADDR:	0x4
BYTE			SCL_Data_ADDR;
#pragma	ioport	SCL_DriveMode_0_ADDR:	0x104
BYTE			SCL_DriveMode_0_ADDR;
#pragma	ioport	SCL_DriveMode_1_ADDR:	0x105
BYTE			SCL_DriveMode_1_ADDR;
#pragma	ioport	SCL_DriveMode_2_ADDR:	0x7
BYTE			SCL_DriveMode_2_ADDR;
#pragma	ioport	SCL_GlobalSelect_ADDR:	0x6
BYTE			SCL_GlobalSelect_ADDR;
#pragma	ioport	SCL_IntCtrl_0_ADDR:	0x106
BYTE			SCL_IntCtrl_0_ADDR;
#pragma	ioport	SCL_IntCtrl_1_ADDR:	0x107
BYTE			SCL_IntCtrl_1_ADDR;
#pragma	ioport	SCL_IntEn_ADDR:	0x5
BYTE			SCL_IntEn_ADDR;
#define SCL_MASK 0x80
#pragma	ioport	SCL_MUXBusCtrl_ADDR:	0x1d9
BYTE			SCL_MUXBusCtrl_ADDR;
