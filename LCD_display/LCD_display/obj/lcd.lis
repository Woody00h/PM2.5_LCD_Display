 0000                   cpu LMM
                        .module lcd.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./lcd.c
                        .area lit(rom, con, rel, lit)
 0000           _DigitSeg::
 0000 F560              .byte 245,96
 0002 B6F2              .byte 182,242
 0004 63D3              .byte 'c,211
 0006 D770              .byte 215,'p
 0008 F7F3              .byte 247,243
 000A                   .dbfile C:\chendong\MYDOCU~1\code\LCD_DI~1\LCD_DI~1\LCD_DI~1\lcd.c
 000A                   .dbsym e DigitSeg _DigitSeg A[10:10]kc
 000A           _DigitSegSwap::
 000A 5F06              .byte 95,6
 000C 6B2F              .byte 'k,47
 000E 363D              .byte 54,61
 0010 7D07              .byte 125,7
 0012 7F3F              .byte 127,63
 0014                   .dbsym e DigitSegSwap _DigitSegSwap A[10:10]kc
                        .area data(ram, con, rel)
 0000                   .dbfile C:\chendong\MYDOCU~1\code\LCD_DI~1\LCD_DI~1\LCD_DI~1\lcd.c
 0000           _DisplayBuf::
 0000 FFFF              .byte 255,255
 0002 FFFF              .byte 255,255
 0004 FFFF              .byte 255,255
 0006 FFFF              .byte 255,255
 0008 FFFF              .byte 255,255
 000A FFFF              .byte 255,255
 000C                   .dbsym e DisplayBuf _DisplayBuf A[12:12]c
                        .area data(ram, con, rel)
 0000                   .dbfile C:\chendong\MYDOCU~1\code\LCD_DI~1\LCD_DI~1\LCD_DI~1\lcd.c
                        .area text(rom, con, rel)
 0000                   .dbfile C:\chendong\MYDOCU~1\code\LCD_DI~1\LCD_DI~1\LCD_DI~1\lcd.c
 0000                   .dbfunc e DisplayPMxx _DisplayPMxx fV
 0000           ;          index -> X+3
 0000           ;           temp -> X+1
 0000           ;              k -> X+0
 0000           ;             pm -> X-5
 0000           _DisplayPMxx::
 0000                   .dbline -1
 0000 10                push X
 0001 4F                mov X,SP
 0002 3805              add SP,5
 0004                   .dbline 33
 0004           ; #include "HT1621B.h"
 0004           ; #include "ParticleSensor.h"
 0004           ; #include "include.h"
 0004           ; #include <stdlib.h>
 0004           ; 
 0004           ; const unsigned char DigitSeg[]    ={0xf5,0x60,0xb6,0xf2,0x63,0xd3,0xd7,0x70,0xf7,0xf3};
 0004           ; const unsigned char DigitSegSwap[]={0x5f,0x06,0x6b,0x2f,0x36,0x3d,0x7d,0x07,0x7f,0x3f};
 0004           ; 
 0004           ; unsigned char DisplayBuf[12]={0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
 0004           ;                                                                               0xff,0xff,0xff,0xff};
 0004           ; unsigned char DisplayNum[3];
 0004           ; 
 0004           ; extern unsigned char LifeFlag;
 0004           ; extern unsigned char RH_T_Flag;
 0004           ; extern unsigned char mode;
 0004           ; extern unsigned char LockStatus;
 0004           ; extern unsigned char Plasma;
 0004           ; extern unsigned char PlasmaFlag;
 0004           ; extern unsigned char Odor;
 0004           ; extern unsigned char FanFlag;
 0004           ; extern unsigned char SpeedLvl;
 0004           ; extern unsigned char PM_Flag;
 0004           ; extern unsigned char HeapLife;
 0004           ; extern unsigned char CarbonLife;
 0004           ; extern unsigned char FanUpdateTimer;
 0004           ; extern unsigned char PlasmaTimer;
 0004           ; extern unsigned char FanUpdateTimeReload;
 0004           ; extern unsigned char Humidity;
 0004           ; extern signed   char Temperature;
 0004           ; extern unsigned char Timer;
 0004           ; 
 0004           ; void DisplayPMxx(unsigned int pm)
 0004           ; {
 0004                   .dbline 34
 0004           ;       char k = 0;
 0004 560000            mov [X+0],0
 0007                   .dbline 38
 0007           ;       unsigned int index;
 0007           ;       unsigned int temp;
 0007           ;       
 0007           ;       temp = pm;
 0007 52FC              mov A,[X-4]
 0009 5402              mov [X+2],A
 000B 52FB              mov A,[X-5]
 000D 5401              mov [X+1],A
 000F                   .dbline 39
 000F           ;       if(temp > 999)
 000F 50E7              mov A,-25
 0011 1302              sub A,[X+2]
 0013 5003              mov A,3
 0015 1B01              sbb A,[X+1]
 0017 D007              jnc L4
 0019           X0:
 0019                   .dbline 41
 0019           ;       {
 0019           ;               temp = 999;
 0019                   .dbline 41
 0019 5602E7            mov [X+2],-25
 001C 560103            mov [X+1],3
 001F                   .dbline 42
 001F           ;       }
 001F           L4:
 001F                   .dbline 44
 001F           ;       
 001F           ;       index = temp/100;
 001F 5000              mov A,0
 0021 08                push A
 0022 5064              mov A,100
 0024 08                push A
 0025 5201              mov A,[X+1]
 0027 08                push A
 0028 5202              mov A,[X+2]
 002A 08                push A
 002B 62D000            mov REG[0xd0],>__r0
 002E 7C0000            xcall __divmodu_16X16_16
 0031 18                pop A
 0032 5404              mov [X+4],A
 0034 18                pop A
 0035 5403              mov [X+3],A
 0037 38FE              add SP,-2
 0039                   .dbline 45
 0039           ;       DisplayNum[0] = index;
 0039 5204              mov A,[X+4]
 003B 62D000            mov REG[0xd0],>_DisplayNum
 003E 5300              mov [_DisplayNum],A
 0040                   .dbline 47
 0040           ;       
 0040           ;       temp = temp%100;
 0040 5000              mov A,0
 0042 08                push A
 0043 5064              mov A,100
 0045 08                push A
 0046 5201              mov A,[X+1]
 0048 08                push A
 0049 5202              mov A,[X+2]
 004B 08                push A
 004C 62D000            mov REG[0xd0],>__r0
 004F 7C0000            xcall __divmodu_16X16_16
 0052 38FE              add SP,-2
 0054 18                pop A
 0055 5402              mov [X+2],A
 0057 18                pop A
 0058 5401              mov [X+1],A
 005A                   .dbline 48
 005A           ;       index = temp/10;
 005A 5000              mov A,0
 005C 08                push A
 005D 500A              mov A,10
 005F 08                push A
 0060 5201              mov A,[X+1]
 0062 08                push A
 0063 5202              mov A,[X+2]
 0065 08                push A
 0066 7C0000            xcall __divmodu_16X16_16
 0069 18                pop A
 006A 5404              mov [X+4],A
 006C 18                pop A
 006D 5403              mov [X+3],A
 006F 38FE              add SP,-2
 0071                   .dbline 49
 0071           ;       DisplayNum[1] = index;
 0071 5204              mov A,[X+4]
 0073 62D000            mov REG[0xd0],>_DisplayNum
 0076 5301              mov [_DisplayNum+1],A
 0078                   .dbline 51
 0078           ;       
 0078           ;       index = temp%10;
 0078 5000              mov A,0
 007A 08                push A
 007B 500A              mov A,10
 007D 08                push A
 007E 5201              mov A,[X+1]
 0080 08                push A
 0081 5202              mov A,[X+2]
 0083 08                push A
 0084 62D000            mov REG[0xd0],>__r0
 0087 7C0000            xcall __divmodu_16X16_16
 008A 38FE              add SP,-2
 008C 18                pop A
 008D 5404              mov [X+4],A
 008F 18                pop A
 0090 5403              mov [X+3],A
 0092                   .dbline 52
 0092           ;       DisplayNum[2] = index;
 0092 5204              mov A,[X+4]
 0094 62D000            mov REG[0xd0],>_DisplayNum
 0097 5302              mov [_DisplayNum+2],A
 0099                   .dbline 54
 0099           ;       
 0099           ;       k = 0;
 0099 560000            mov [X+0],0
 009C 8075              xjmp L9
 009E           L8:
 009E                   .dbline 56
 009E           ;       while (k<2)
 009E           ;       {
 009E                   .dbline 57
 009E           ;               if (DisplayNum[k])
 009E 62D000            mov REG[0xd0],>__r0
 00A1 5200              mov A,[X+0]
 00A3 5300              mov [__r1],A
 00A5 550000            mov [__r0],0
 00A8 060000            add [__r1],<_DisplayNum
 00AB 0E0000            adc [__r0],>_DisplayNum
 00AE 5100              mov A,[__r0]
 00B0 60D4              mov REG[0xd4],A
 00B2 3E00              mvi A,[__r1]
 00B4 3900              cmp A,0
 00B6 A041              jz L11
 00B8                   .dbline 59
 00B8           ;               {
 00B8           ;                       DisplayBuf[k] = DigitSeg[DisplayNum[k]];
 00B8                   .dbline 59
 00B8 5200              mov A,[X+0]
 00BA 5300              mov [__r1],A
 00BC 550000            mov [__r0],0
 00BF 060000            add [__r1],<_DisplayNum
 00C2 0E0000            adc [__r0],>_DisplayNum
 00C5 5100              mov A,[__r0]
 00C7 60D4              mov REG[0xd4],A
 00C9 3E00              mvi A,[__r1]
 00CB 5300              mov [__r1],A
 00CD 550000            mov [__r0],0
 00D0 060000            add [__r1],<_DigitSeg
 00D3 0E0000            adc [__r0],>_DigitSeg
 00D6 5100              mov A,[__r0]
 00D8 10                push X
 00D9 5800              mov X,[__r1]
 00DB 28                romx
 00DC 20                pop X
 00DD 5300              mov [__r0],A
 00DF 5200              mov A,[X+0]
 00E1 5300              mov [__r3],A
 00E3 550000            mov [__r2],0
 00E6 060000            add [__r3],<_DisplayBuf
 00E9 0E0000            adc [__r2],>_DisplayBuf
 00EC 5100              mov A,[__r2]
 00EE 60D5              mov REG[0xd5],A
 00F0 5100              mov A,[__r0]
 00F2 3F00              mvi [__r3],A
 00F4                   .dbline 60
 00F4           ;                       k++;
 00F4 7700              inc [X+0]
 00F6                   .dbline 61
 00F6           ;                       break;
 00F6 8063              xjmp L16
 00F8           L11:
 00F8                   .dbline 64
 00F8           ;               }
 00F8           ;               else
 00F8           ;               {
 00F8                   .dbline 65
 00F8           ;                       DisplayBuf[k] = 0;
 00F8 62D000            mov REG[0xd0],>__r0
 00FB 5200              mov A,[X+0]
 00FD 5300              mov [__r1],A
 00FF 550000            mov [__r0],0
 0102 060000            add [__r1],<_DisplayBuf
 0105 0E0000            adc [__r0],>_DisplayBuf
 0108 5100              mov A,[__r0]
 010A 60D5              mov REG[0xd5],A
 010C 5000              mov A,0
 010E 3F00              mvi [__r1],A
 0110                   .dbline 66
 0110           ;               }
 0110                   .dbline 67
 0110           ;               k++;
 0110 7700              inc [X+0]
 0112                   .dbline 68
 0112           ;       }
 0112           L9:
 0112                   .dbline 55
 0112 3D0002            cmp [X+0],2
 0115 CF88              jc L8
 0117           X1:
 0117                   .dbline 70
 0117           ;       
 0117           ;       for (;k<3;k++)
 0117 8042              xjmp L16
 0119           L13:
 0119                   .dbline 71
 0119           ;       {
 0119                   .dbline 72
 0119           ;               DisplayBuf[k] = DigitSeg[DisplayNum[k]];
 0119 62D000            mov REG[0xd0],>__r0
 011C 5200              mov A,[X+0]
 011E 5300              mov [__r1],A
 0120 550000            mov [__r0],0
 0123 060000            add [__r1],<_DisplayNum
 0126 0E0000            adc [__r0],>_DisplayNum
 0129 5100              mov A,[__r0]
 012B 60D4              mov REG[0xd4],A
 012D 3E00              mvi A,[__r1]
 012F 5300              mov [__r1],A
 0131 550000            mov [__r0],0
 0134 060000            add [__r1],<_DigitSeg
 0137 0E0000            adc [__r0],>_DigitSeg
 013A 5100              mov A,[__r0]
 013C 10                push X
 013D 5800              mov X,[__r1]
 013F 28                romx
 0140 20                pop X
 0141 5300              mov [__r0],A
 0143 5200              mov A,[X+0]
 0145 5300              mov [__r3],A
 0147 550000            mov [__r2],0
 014A 060000            add [__r3],<_DisplayBuf
 014D 0E0000            adc [__r2],>_DisplayBuf
 0150 5100              mov A,[__r2]
 0152 60D5              mov REG[0xd5],A
 0154 5100              mov A,[__r0]
 0156 3F00              mvi [__r3],A
 0158                   .dbline 73
 0158           ;       }
 0158           L14:
 0158                   .dbline 70
 0158 7700              inc [X+0]
 015A           L16:
 015A                   .dbline 70
 015A 3D0003            cmp [X+0],3
 015D CFBB              jc L13
 015F           X2:
 015F                   .dbline -2
 015F           L3:
 015F 38FB              add SP,-5
 0161 20                pop X
 0162                   .dbline 0 ; func end
 0162 7F                ret
 0163                   .dbsym l index 3 i
 0163                   .dbsym l temp 1 i
 0163                   .dbsym l k 0 c
 0163                   .dbsym l pm -5 i
 0163                   .dbend
 0163                   .dbfunc e ShowLife _ShowLife fV
 0163           ;          index -> X+1
 0163           ;           temp -> X+0
 0163           ;           life -> X-4
 0163           _ShowLife::
 0163                   .dbline -1
 0163 10                push X
 0164 4F                mov X,SP
 0165 3802              add SP,2
 0167                   .dbline 77
 0167           ; }
 0167           ; 
 0167           ; void ShowLife(unsigned char life)
 0167           ; {
 0167                   .dbline 78
 0167           ;       unsigned char temp = life;
 0167 52FC              mov A,[X-4]
 0169 5400              mov [X+0],A
 016B                   .dbline 80
 016B           ;       unsigned char index;
 016B           ;       if (temp > 99)
 016B 5063              mov A,99
 016D 3B00              cmp A,[X+0]
 016F D004              jnc L18
 0171           X3:
 0171                   .dbline 82
 0171           ;       {
 0171           ;               temp = 99;
 0171                   .dbline 82
 0171 560063            mov [X+0],99
 0174                   .dbline 83
 0174           ;       }
 0174           L18:
 0174                   .dbline 85
 0174           ;       
 0174           ;       index = temp/10;
 0174 500A              mov A,10
 0176 08                push A
 0177 5200              mov A,[X+0]
 0179 08                push A
 017A 62D000            mov REG[0xd0],>__r0
 017D 7C0000            xcall __divmodu_8X8_8
 0180 18                pop A
 0181 5401              mov [X+1],A
 0183 38FF              add SP,-1
 0185                   .dbline 86
 0185           ;       if(index)
 0185 3D0100            cmp [X+1],0
 0188 A01C              jz L20
 018A                   .dbline 88
 018A           ;       {
 018A           ;               DisplayBuf[3] = DigitSeg[index];
 018A                   .dbline 88
 018A 5201              mov A,[X+1]
 018C 5300              mov [__r1],A
 018E 550000            mov [__r0],0
 0191 060000            add [__r1],<_DigitSeg
 0194 0E0000            adc [__r0],>_DigitSeg
 0197 5100              mov A,[__r0]
 0199 10                push X
 019A 5800              mov X,[__r1]
 019C 28                romx
 019D 20                pop X
 019E 62D000            mov REG[0xd0],>_DisplayBuf
 01A1 5303              mov [_DisplayBuf+3],A
 01A3                   .dbline 89
 01A3           ;       }
 01A3 8007              xjmp L21
 01A5           L20:
 01A5                   .dbline 91
 01A5           ;       else
 01A5           ;       {
 01A5                   .dbline 92
 01A5           ;               DisplayBuf[3] = 0;
 01A5 62D000            mov REG[0xd0],>_DisplayBuf
 01A8 550300            mov [_DisplayBuf+3],0
 01AB                   .dbline 93
 01AB           ;       }
 01AB           L21:
 01AB                   .dbline 95
 01AB           ;       
 01AB           ;       index = temp%10;
 01AB 500A              mov A,10
 01AD 08                push A
 01AE 5200              mov A,[X+0]
 01B0 08                push A
 01B1 62D000            mov REG[0xd0],>__r0
 01B4 7C0000            xcall __divmodu_8X8_8
 01B7 38FF              add SP,-1
 01B9 18                pop A
 01BA 5401              mov [X+1],A
 01BC                   .dbline 96
 01BC           ;       DisplayBuf[4] = DigitSeg[index];
 01BC 5201              mov A,[X+1]
 01BE 5300              mov [__r1],A
 01C0 550000            mov [__r0],0
 01C3 060000            add [__r1],<_DigitSeg
 01C6 0E0000            adc [__r0],>_DigitSeg
 01C9 5100              mov A,[__r0]
 01CB 10                push X
 01CC 5800              mov X,[__r1]
 01CE 28                romx
 01CF 20                pop X
 01D0 62D000            mov REG[0xd0],>_DisplayBuf
 01D3 5304              mov [_DisplayBuf+4],A
 01D5                   .dbline -2
 01D5           L17:
 01D5 38FE              add SP,-2
 01D7 20                pop X
 01D8                   .dbline 0 ; func end
 01D8 7F                ret
 01D9                   .dbsym l index 1 c
 01D9                   .dbsym l temp 0 c
 01D9                   .dbsym l life -4 c
 01D9                   .dbend
 01D9                   .dbfunc e ShowHumiTemp _ShowHumiTemp fV
 01D9           ;          index -> X+1
 01D9           ;           temp -> X+0
 01D9           ;          value -> X-4
 01D9           _ShowHumiTemp::
 01D9                   .dbline -1
 01D9 10                push X
 01DA 4F                mov X,SP
 01DB 3802              add SP,2
 01DD                   .dbline 99
 01DD           ; }
 01DD           ; void ShowHumiTemp(signed char value)
 01DD           ; {
 01DD                   .dbline 100
 01DD           ;       signed char temp = value;
 01DD 52FC              mov A,[X-4]
 01DF 5400              mov [X+0],A
 01E1                   .dbline 102
 01E1           ;       unsigned char index;
 01E1           ;       if (temp > 99)
 01E1 5063              mov A,99
 01E3 3B00              cmp A,[X+0]
 01E5 6D                rrc A
 01E6 3300              xor A,[X+0]
 01E8 3163              xor A,99
 01EA 6A                rlc A
 01EB D004              jnc L26
 01ED           X4:
 01ED                   .dbline 104
 01ED           ;       {
 01ED           ;               temp = 99;
 01ED                   .dbline 104
 01ED 560063            mov [X+0],99
 01F0                   .dbline 105
 01F0           ;       }
 01F0           L26:
 01F0                   .dbline 107
 01F0           ;       
 01F0           ;       if (temp < 0)
 01F0 5200              mov A,[X+0]
 01F2 3900              cmp A,0
 01F4 6D                rrc A
 01F5 3100              xor A,0
 01F7 3300              xor A,[X+0]
 01F9 6A                rlc A
 01FA D066              jnc L28
 01FC           X5:
 01FC                   .dbline 109
 01FC           ;       {
 01FC           ;               DisplayBuf[9] = 0x20; //"-"
 01FC                   .dbline 109
 01FC 62D000            mov REG[0xd0],>_DisplayBuf
 01FF 550920            mov [_DisplayBuf+9],32
 0202                   .dbline 110
 0202           ;               temp = abs(temp);
 0202 62D000            mov REG[0xd0],>__r0
 0205 5200              mov A,[X+0]
 0207 5300              mov [__r1],A
 0209 550000            mov [__r0],0
 020C 470080            tst [__r1],-128
 020F A004              jz X6
 0211 5500FF            mov [__r0],-1
 0214           X6:
 0214 62D000            mov REG[0xd0],>__r0
 0217 5100              mov A,[__r0]
 0219 08                push A
 021A 5100              mov A,[__r1]
 021C 08                push A
 021D 7C0000            xcall _abs
 0220 38FE              add SP,-2
 0222 62D000            mov REG[0xd0],>__r0
 0225 5100              mov A,[__r1]
 0227 5400              mov [X+0],A
 0229                   .dbline 111
 0229           ;               if (temp > 9)
 0229 5009              mov A,9
 022B 3B00              cmp A,[X+0]
 022D 6D                rrc A
 022E 3300              xor A,[X+0]
 0230 3109              xor A,9
 0232 6A                rlc A
 0233 D004              jnc L31
 0235           X7:
 0235                   .dbline 113
 0235           ;               {
 0235           ;                       temp = 9;
 0235                   .dbline 113
 0235 560009            mov [X+0],9
 0238                   .dbline 114
 0238           ;               }
 0238           L31:
 0238                   .dbline 115
 0238           ;               DisplayBuf[8] = DigitSegSwap[temp];
 0238 62D000            mov REG[0xd0],>__r0
 023B 5200              mov A,[X+0]
 023D 5300              mov [__r1],A
 023F 550000            mov [__r0],0
 0242 470080            tst [__r1],-128
 0245 A004              jz X8
 0247 5500FF            mov [__r0],-1
 024A           X8:
 024A 62D000            mov REG[0xd0],>__r0
 024D 06000A            add [__r1],<_DigitSegSwap
 0250 0E000A            adc [__r0],>_DigitSegSwap
 0253 5100              mov A,[__r0]
 0255 10                push X
 0256 5800              mov X,[__r1]
 0258 28                romx
 0259 20                pop X
 025A 62D000            mov REG[0xd0],>_DisplayBuf
 025D 5308              mov [_DisplayBuf+8],A
 025F                   .dbline 116
 025F           ;       }
 025F 8062              xjmp L29
 0261           L28:
 0261                   .dbline 118
 0261           ;       else 
 0261           ;       {
 0261                   .dbline 119
 0261           ;               index = temp/10;
 0261 500A              mov A,10
 0263 08                push A
 0264 5200              mov A,[X+0]
 0266 08                push A
 0267 62D000            mov REG[0xd0],>__r0
 026A 7C0000            xcall __divmod_8X8_8
 026D 18                pop A
 026E 5401              mov [X+1],A
 0270 38FF              add SP,-1
 0272                   .dbline 120
 0272           ;               if(index)
 0272 3D0100            cmp [X+1],0
 0275 A01C              jz L34
 0277                   .dbline 122
 0277           ;               {
 0277           ;                       DisplayBuf[9] = DigitSegSwap[index];
 0277                   .dbline 122
 0277 5201              mov A,[X+1]
 0279 5300              mov [__r1],A
 027B 550000            mov [__r0],0
 027E 06000A            add [__r1],<_DigitSegSwap
 0281 0E000A            adc [__r0],>_DigitSegSwap
 0284 5100              mov A,[__r0]
 0286 10                push X
 0287 5800              mov X,[__r1]
 0289 28                romx
 028A 20                pop X
 028B 62D000            mov REG[0xd0],>_DisplayBuf
 028E 5309              mov [_DisplayBuf+9],A
 0290                   .dbline 123
 0290           ;               }
 0290 8007              xjmp L35
 0292           L34:
 0292                   .dbline 125
 0292           ;               else
 0292           ;               {
 0292                   .dbline 126
 0292           ;                       DisplayBuf[9] = 0;
 0292 62D000            mov REG[0xd0],>_DisplayBuf
 0295 550900            mov [_DisplayBuf+9],0
 0298                   .dbline 127
 0298           ;               }
 0298           L35:
 0298                   .dbline 129
 0298           ;               
 0298           ;               index = temp%10;
 0298 500A              mov A,10
 029A 08                push A
 029B 5200              mov A,[X+0]
 029D 08                push A
 029E 62D000            mov REG[0xd0],>__r0
 02A1 7C0000            xcall __divmod_8X8_8
 02A4 38FF              add SP,-1
 02A6 18                pop A
 02A7 5401              mov [X+1],A
 02A9                   .dbline 130
 02A9           ;               DisplayBuf[8] = DigitSegSwap[index];
 02A9 5201              mov A,[X+1]
 02AB 5300              mov [__r1],A
 02AD 550000            mov [__r0],0
 02B0 06000A            add [__r1],<_DigitSegSwap
 02B3 0E000A            adc [__r0],>_DigitSegSwap
 02B6 5100              mov A,[__r0]
 02B8 10                push X
 02B9 5800              mov X,[__r1]
 02BB 28                romx
 02BC 20                pop X
 02BD 62D000            mov REG[0xd0],>_DisplayBuf
 02C0 5308              mov [_DisplayBuf+8],A
 02C2                   .dbline 131
 02C2           ;       }
 02C2           L29:
 02C2                   .dbline -2
 02C2           L25:
 02C2 38FE              add SP,-2
 02C4 20                pop X
 02C5                   .dbline 0 ; func end
 02C5 7F                ret
 02C6                   .dbsym l index 1 c
 02C6                   .dbsym l temp 0 C
 02C6                   .dbsym l value -4 C
 02C6                   .dbend
 02C6                   .dbfunc e LCDOuputAll _LCDOuputAll fV
 02C6           ;              k -> X+0
 02C6           _LCDOuputAll::
 02C6                   .dbline -1
 02C6 10                push X
 02C7 4F                mov X,SP
 02C8 3801              add SP,1
 02CA                   .dbline 135
 02CA           ; }
 02CA           ; 
 02CA           ; void LCDOuputAll(void)
 02CA           ; {
 02CA                   .dbline 136
 02CA           ;       char k = 0;
 02CA 560000            mov [X+0],0
 02CD                   .dbline 138
 02CD           ;       
 02CD           ;       for (k=0;k<16;k++)
 02CD 560000            mov [X+0],0
 02D0 801B              xjmp L43
 02D2           L40:
 02D2                   .dbline 139
 02D2           ;       {
 02D2                   .dbline 140
 02D2           ;               DisplayBuf[k] = 0;
 02D2 62D000            mov REG[0xd0],>__r0
 02D5 5200              mov A,[X+0]
 02D7 5300              mov [__r1],A
 02D9 550000            mov [__r0],0
 02DC 060000            add [__r1],<_DisplayBuf
 02DF 0E0000            adc [__r0],>_DisplayBuf
 02E2 5100              mov A,[__r0]
 02E4 60D5              mov REG[0xd5],A
 02E6 5000              mov A,0
 02E8 3F00              mvi [__r1],A
 02EA                   .dbline 141
 02EA           ;       }
 02EA           L41:
 02EA                   .dbline 138
 02EA 7700              inc [X+0]
 02EC           L43:
 02EC                   .dbline 138
 02EC 3D0010            cmp [X+0],16
 02EF CFE2              jc L40
 02F1           X9:
 02F1                   .dbline 146
 02F1           ;       
 02F1           ;       //
 02F1           ;       //show the PM2.5 or PM1.0
 02F1           ;       //
 02F1           ;       if (PM_Flag == PM2_5)//show the PM2.5 value
 02F1 62D000            mov REG[0xd0],>_PM_Flag
 02F4 3C0000            cmp [_PM_Flag],0
 02F7 B016              jnz L44
 02F9                   .dbline 148
 02F9           ;       {
 02F9           ;               DisplayPMxx(MyPMSUnion.MyPMFrame.PM2_5_US);
 02F9                   .dbline 148
 02F9 62D000            mov REG[0xd0],>_MyPMSUnion
 02FC 5106              mov A,[_MyPMSUnion+6]
 02FE 08                push A
 02FF 5107              mov A,[_MyPMSUnion+6+1]
 0301 08                push A
 0302 9CFC              xcall _DisplayPMxx
 0304 38FE              add SP,-2
 0306                   .dbline 149
 0306           ;               DisplayBuf[0] |= BIT3; //PM2.5 segment
 0306 62D000            mov REG[0xd0],>_DisplayBuf
 0309 2E0008            or [_DisplayBuf],8
 030C                   .dbline 150
 030C           ;       }
 030C 8014              xjmp L45
 030E           L44:
 030E                   .dbline 152
 030E           ;       else //show the PM1.0 
 030E           ;       {
 030E                   .dbline 153
 030E           ;               DisplayPMxx(MyPMSUnion.MyPMFrame.PM1_0_US);
 030E 62D000            mov REG[0xd0],>_MyPMSUnion
 0311 5104              mov A,[_MyPMSUnion+4]
 0313 08                push A
 0314 5105              mov A,[_MyPMSUnion+4+1]
 0316 08                push A
 0317 9CE7              xcall _DisplayPMxx
 0319 38FE              add SP,-2
 031B                   .dbline 154
 031B           ;               DisplayBuf[1] |= BIT3;  //PM1.0 segment
 031B 62D000            mov REG[0xd0],>_DisplayBuf
 031E 2E0108            or [_DisplayBuf+1],8
 0321                   .dbline 155
 0321           ;       }
 0321           L45:
 0321                   .dbline 156
 0321           ;       DisplayBuf[2] |= BIT3; //ug/m3 segment
 0321 62D000            mov REG[0xd0],>_DisplayBuf
 0324 2E0208            or [_DisplayBuf+2],8
 0327                   .dbline 161
 0327           ;       
 0327           ;       //
 0327           ;       //show the heap or carbon life
 0327           ;       //
 0327           ;       if (LifeFlag == HEAP_LIFE)
 0327 62D000            mov REG[0xd0],>_LifeFlag
 032A 3C0000            cmp [_LifeFlag],0
 032D B013              jnz L50
 032F                   .dbline 163
 032F           ;       {
 032F           ;               ShowLife(HeapLife);
 032F                   .dbline 163
 032F 62D000            mov REG[0xd0],>_HeapLife
 0332 5100              mov A,[_HeapLife]
 0334 08                push A
 0335 9E2C              xcall _ShowLife
 0337 38FF              add SP,-1
 0339                   .dbline 164
 0339           ;               DisplayBuf[3] |= BIT3; //H segment
 0339 62D000            mov REG[0xd0],>_DisplayBuf
 033C 2E0308            or [_DisplayBuf+3],8
 033F                   .dbline 166
 033F           ; //            DisplayBuf[4] &= ~BIT3;
 033F           ;       }
 033F 8011              xjmp L51
 0341           L50:
 0341                   .dbline 168
 0341           ;       else 
 0341           ;       {
 0341                   .dbline 169
 0341           ;               ShowLife(CarbonLife);
 0341 62D000            mov REG[0xd0],>_CarbonLife
 0344 5100              mov A,[_CarbonLife]
 0346 08                push A
 0347 9E1A              xcall _ShowLife
 0349 38FF              add SP,-1
 034B                   .dbline 170
 034B           ;               DisplayBuf[4] |= BIT3; //炭 segment
 034B 62D000            mov REG[0xd0],>_DisplayBuf
 034E 2E0408            or [_DisplayBuf+4],8
 0351                   .dbline 172
 0351           ; //            DisplayBuf[3] &= ~BIT3;
 0351           ;       }
 0351           L51:
 0351                   .dbline 177
 0351           ;       
 0351           ;       //
 0351           ;       //show speed level
 0351           ;       //
 0351           ;       if (SpeedLvl > 8)
 0351 62D000            mov REG[0xd0],>_SpeedLvl
 0354 5008              mov A,8
 0356 3A00              cmp A,[_SpeedLvl]
 0358 D007              jnc L54
 035A           X10:
 035A                   .dbline 179
 035A           ;       {
 035A           ;               SpeedLvl = 8;
 035A                   .dbline 179
 035A 62D000            mov REG[0xd0],>_SpeedLvl
 035D 550008            mov [_SpeedLvl],8
 0360                   .dbline 180
 0360           ;       }
 0360           L54:
 0360                   .dbline 181
 0360           ;       DisplayBuf[5] = DigitSeg[SpeedLvl];
 0360 62D000            mov REG[0xd0],>_SpeedLvl
 0363 5100              mov A,[_SpeedLvl]
 0365 62D000            mov REG[0xd0],>__r0
 0368 5300              mov [__r1],A
 036A 550000            mov [__r0],0
 036D 060000            add [__r1],<_DigitSeg
 0370 0E0000            adc [__r0],>_DigitSeg
 0373 5100              mov A,[__r0]
 0375 10                push X
 0376 5800              mov X,[__r1]
 0378 28                romx
 0379 20                pop X
 037A 62D000            mov REG[0xd0],>_DisplayBuf
 037D 5305              mov [_DisplayBuf+5],A
 037F                   .dbline 183
 037F           ;       
 037F           ;       if(!FanUpdateTimer)
 037F 62D000            mov REG[0xd0],>_FanUpdateTimer
 0382 3C0000            cmp [_FanUpdateTimer],0
 0385 B014              jnz L57
 0387                   .dbline 185
 0387           ;       {
 0387           ;               FanUpdateTimer = FanUpdateTimeReload;
 0387                   .dbline 185
 0387 62D000            mov REG[0xd0],>_FanUpdateTimeReload
 038A 5100              mov A,[_FanUpdateTimeReload]
 038C 62D000            mov REG[0xd0],>_FanUpdateTimer
 038F 5300              mov [_FanUpdateTimer],A
 0391                   .dbline 186
 0391           ;               FanFlag ^= 1;
 0391 62D000            mov REG[0xd0],>_FanFlag
 0394 5100              mov A,[_FanFlag]
 0396 3101              xor A,1
 0398 5300              mov [_FanFlag],A
 039A                   .dbline 187
 039A           ;       }
 039A           L57:
 039A                   .dbline 188
 039A           ;       if (FanFlag)
 039A 62D000            mov REG[0xd0],>_FanFlag
 039D 3C0000            cmp [_FanFlag],0
 03A0 A009              jz L59
 03A2                   .dbline 190
 03A2           ;       {
 03A2           ;               DisplayBuf[6] |= BIT0;
 03A2                   .dbline 190
 03A2 62D000            mov REG[0xd0],>_DisplayBuf
 03A5 2E0601            or [_DisplayBuf+6],1
 03A8                   .dbline 192
 03A8           ; //            DisplayBuf[6] &= ~BIT1;
 03A8           ;       }
 03A8 8007              xjmp L60
 03AA           L59:
 03AA                   .dbline 194
 03AA           ;       else 
 03AA           ;       {
 03AA                   .dbline 195
 03AA           ;               DisplayBuf[6] |= BIT1;
 03AA 62D000            mov REG[0xd0],>_DisplayBuf
 03AD 2E0602            or [_DisplayBuf+6],2
 03B0                   .dbline 197
 03B0           ; //            DisplayBuf[6] &= ~BIT0;
 03B0           ;       }
 03B0           L60:
 03B0                   .dbline 202
 03B0           ;       
 03B0           ;       //
 03B0           ;       //show the temperature/humidity/timer
 03B0           ;       //
 03B0           ;       if (RH_T_Flag == HUMIDITY)
 03B0 62D000            mov REG[0xd0],>_RH_T_Flag
 03B3 3C0000            cmp [_RH_T_Flag],0
 03B6 B00D              jnz L63
 03B8                   .dbline 204
 03B8           ;       {
 03B8           ;               ShowHumiTemp(Humidity);
 03B8                   .dbline 204
 03B8 62D000            mov REG[0xd0],>_Humidity
 03BB 5100              mov A,[_Humidity]
 03BD 08                push A
 03BE 9E19              xcall _ShowHumiTemp
 03C0 38FF              add SP,-1
 03C2                   .dbline 208
 03C2           ; //            DisplayBuf[9] &= ~BIT7;
 03C2           ; //            DisplayBuf[7] &= ~BIT4;
 03C2           ; //            DisplayBuf[7] &= ~BIT5;
 03C2           ;       }
 03C2 802E              xjmp L64
 03C4           L63:
 03C4                   .dbline 210
 03C4           ;       else
 03C4           ;       {
 03C4                   .dbline 211
 03C4           ;               if (RH_T_Flag == TEMPERATURE)
 03C4 62D000            mov REG[0xd0],>_RH_T_Flag
 03C7 3C0001            cmp [_RH_T_Flag],1
 03CA B013              jnz L65
 03CC                   .dbline 213
 03CC           ;               {
 03CC           ;                       ShowHumiTemp(Temperature);
 03CC                   .dbline 213
 03CC 62D000            mov REG[0xd0],>_Temperature
 03CF 5100              mov A,[_Temperature]
 03D1 08                push A
 03D2 9E05              xcall _ShowHumiTemp
 03D4 38FF              add SP,-1
 03D6                   .dbline 216
 03D6           ; //                    DisplayBuf[9] &= ~BIT7;
 03D6           ; //                    DisplayBuf[7] &= ~BIT4;
 03D6           ;                       DisplayBuf[7] |= BIT5;
 03D6 62D000            mov REG[0xd0],>_DisplayBuf
 03D9 2E0720            or [_DisplayBuf+7],32
 03DC                   .dbline 217
 03DC           ;               }
 03DC 8014              xjmp L66
 03DE           L65:
 03DE                   .dbline 219
 03DE           ;               else //timer
 03DE           ;               {
 03DE                   .dbline 220
 03DE           ;                       ShowHumiTemp(Timer);
 03DE 62D000            mov REG[0xd0],>_Timer
 03E1 5100              mov A,[_Timer]
 03E3 08                push A
 03E4 9DF3              xcall _ShowHumiTemp
 03E6 38FF              add SP,-1
 03E8                   .dbline 221
 03E8           ;                       DisplayBuf[9] |= BIT7;
 03E8 62D000            mov REG[0xd0],>_DisplayBuf
 03EB 2E0980            or [_DisplayBuf+9],-128
 03EE                   .dbline 222
 03EE           ;                       DisplayBuf[7] |= BIT4;
 03EE 2E0710            or [_DisplayBuf+7],16
 03F1                   .dbline 224
 03F1           ; //                    DisplayBuf[7] &= ~BIT5;
 03F1           ;               }
 03F1           L66:
 03F1                   .dbline 225
 03F1           ;       }
 03F1           L64:
 03F1                   .dbline 230
 03F1           ;       
 03F1           ;       //
 03F1           ;       //show auto/manual mode
 03F1           ;       //
 03F1           ;       if (mode == AUTO_MODE)
 03F1 62D000            mov REG[0xd0],>_mode
 03F4 3C0000            cmp [_mode],0
 03F7 B009              jnz L70
 03F9                   .dbline 232
 03F9           ;       {
 03F9           ;               DisplayBuf[7] |= BIT1;
 03F9                   .dbline 232
 03F9 62D000            mov REG[0xd0],>_DisplayBuf
 03FC 2E0702            or [_DisplayBuf+7],2
 03FF                   .dbline 234
 03FF           ; //            DisplayBuf[7] &= ~BIT2;
 03FF           ;       }
 03FF 8007              xjmp L71
 0401           L70:
 0401                   .dbline 236
 0401           ;       else 
 0401           ;       {
 0401                   .dbline 237
 0401           ;               DisplayBuf[7] |= BIT2;
 0401 62D000            mov REG[0xd0],>_DisplayBuf
 0404 2E0704            or [_DisplayBuf+7],4
 0407                   .dbline 239
 0407           ; //            DisplayBuf[7] &= ~BIT1;
 0407           ;       }
 0407           L71:
 0407                   .dbline 244
 0407           ;       
 0407           ;       //
 0407           ;       //show lock status
 0407           ;       //
 0407           ;       if (LockStatus)
 0407 62D000            mov REG[0xd0],>_LockStatus
 040A 3C0000            cmp [_LockStatus],0
 040D A007              jz L74
 040F                   .dbline 246
 040F           ;       {
 040F           ;               DisplayBuf[7] |= BIT0;
 040F                   .dbline 246
 040F 62D000            mov REG[0xd0],>_DisplayBuf
 0412 2E0701            or [_DisplayBuf+7],1
 0415                   .dbline 247
 0415           ;       }
 0415           L74:
 0415                   .dbline 256
 0415           ; //    else
 0415           ; //    {
 0415           ; //            DisplayBuf[7] &= ~BIT0;
 0415           ; //    }
 0415           ;       
 0415           ;       //
 0415           ;       //show plasma
 0415           ;       //
 0415           ;       if (Plasma)
 0415 62D000            mov REG[0xd0],>_Plasma
 0418 3C0000            cmp [_Plasma],0
 041B A032              jz L77
 041D                   .dbline 258
 041D           ;       {
 041D           ;               DisplayBuf[6] |= BIT4;
 041D                   .dbline 258
 041D 62D000            mov REG[0xd0],>_DisplayBuf
 0420 2E0610            or [_DisplayBuf+6],16
 0423                   .dbline 259
 0423           ;               if (!PlasmaTimer)
 0423 62D000            mov REG[0xd0],>_PlasmaTimer
 0426 3C0000            cmp [_PlasmaTimer],0
 0429 B024              jnz L80
 042B                   .dbline 261
 042B           ;               {
 042B           ;                       PlasmaTimer = PLASMA_TIMER_RELOAD;
 042B                   .dbline 261
 042B 550008            mov [_PlasmaTimer],8
 042E                   .dbline 262
 042E           ;                       if (PlasmaFlag == 0)
 042E 62D000            mov REG[0xd0],>_PlasmaFlag
 0431 3C0000            cmp [_PlasmaFlag],0
 0434 B006              jnz L82
 0436                   .dbline 264
 0436           ;                       {
 0436           ;                               PlasmaFlag = 1;
 0436                   .dbline 264
 0436 550001            mov [_PlasmaFlag],1
 0439                   .dbline 265
 0439           ;                       }
 0439 8014              xjmp L83
 043B           L82:
 043B                   .dbline 267
 043B           ;                       else
 043B           ;                       {
 043B                   .dbline 268
 043B           ;                               if (PlasmaFlag == 1)
 043B 62D000            mov REG[0xd0],>_PlasmaFlag
 043E 3C0001            cmp [_PlasmaFlag],1
 0441 B006              jnz L84
 0443                   .dbline 270
 0443           ;                               {
 0443           ;                                       PlasmaFlag = 2;
 0443                   .dbline 270
 0443 550002            mov [_PlasmaFlag],2
 0446                   .dbline 271
 0446           ;                               }
 0446 8007              xjmp L85
 0448           L84:
 0448                   .dbline 273
 0448           ;                               else 
 0448           ;                               {
 0448                   .dbline 274
 0448           ;                                       PlasmaFlag = 0;
 0448 62D000            mov REG[0xd0],>_PlasmaFlag
 044B 550000            mov [_PlasmaFlag],0
 044E                   .dbline 275
 044E           ;                               }
 044E           L85:
 044E                   .dbline 276
 044E           ;                       }
 044E           L83:
 044E                   .dbline 277
 044E           ;               }
 044E           L80:
 044E                   .dbline 278
 044E           ;       }
 044E           L77:
 044E                   .dbline 279
 044E           ;       if (PlasmaFlag == 1)
 044E 62D000            mov REG[0xd0],>_PlasmaFlag
 0451 3C0001            cmp [_PlasmaFlag],1
 0454 B009              jnz L86
 0456                   .dbline 281
 0456           ;       {
 0456           ;               DisplayBuf[6] |= BIT6;
 0456                   .dbline 281
 0456 62D000            mov REG[0xd0],>_DisplayBuf
 0459 2E0640            or [_DisplayBuf+6],64
 045C                   .dbline 282
 045C           ;       }
 045C 800F              xjmp L87
 045E           L86:
 045E                   .dbline 283
 045E           ;       else if (PlasmaFlag == 2)
 045E 62D000            mov REG[0xd0],>_PlasmaFlag
 0461 3C0002            cmp [_PlasmaFlag],2
 0464 B007              jnz L89
 0466                   .dbline 285
 0466           ;       {
 0466           ;               DisplayBuf[6] |= BIT5 + BIT6;
 0466                   .dbline 285
 0466 62D000            mov REG[0xd0],>_DisplayBuf
 0469 2E0660            or [_DisplayBuf+6],96
 046C                   .dbline 286
 046C           ;       }
 046C           L89:
 046C           L87:
 046C                   .dbline 292
 046C           ; 
 046C           ;       
 046C           ;       //
 046C           ;       //show the dust/odor level
 046C           ;       //
 046C           ;       if (MyPMSUnion.MyPMFrame.PM2_5_US > 150)
 046C 62D000            mov REG[0xd0],>_MyPMSUnion
 046F 5096              mov A,-106
 0471 1207              sub A,[_MyPMSUnion+6+1]
 0473 5000              mov A,0
 0475 1A06              sbb A,[_MyPMSUnion+6]
 0477 D00C              jnc L92
 0479           X11:
 0479                   .dbline 294
 0479           ;       {
 0479           ;               DisplayBuf[11] |= BIT5 + BIT4;
 0479                   .dbline 294
 0479 62D000            mov REG[0xd0],>_DisplayBuf
 047C 2E0B30            or [_DisplayBuf+11],48
 047F                   .dbline 295
 047F           ;               DisplayBuf[10] |= BIT0 + BIT1 + BIT2 + BIT3;
 047F 2E0A0F            or [_DisplayBuf+10],15
 0482                   .dbline 296
 0482           ;       }
 0482 8064              xjmp L93
 0484           L92:
 0484                   .dbline 298
 0484           ;       else 
 0484           ;       {
 0484                   .dbline 299
 0484           ;               if (MyPMSUnion.MyPMFrame.PM2_5_US > 100)
 0484 62D000            mov REG[0xd0],>_MyPMSUnion
 0487 5064              mov A,100
 0489 1207              sub A,[_MyPMSUnion+6+1]
 048B 5000              mov A,0
 048D 1A06              sbb A,[_MyPMSUnion+6]
 048F D00C              jnc L97
 0491           X12:
 0491                   .dbline 301
 0491           ;               {
 0491           ;                       DisplayBuf[11] |= BIT5 + BIT4;
 0491                   .dbline 301
 0491 62D000            mov REG[0xd0],>_DisplayBuf
 0494 2E0B30            or [_DisplayBuf+11],48
 0497                   .dbline 302
 0497           ;                       DisplayBuf[10] |= BIT0 + BIT1 + BIT2;
 0497 2E0A07            or [_DisplayBuf+10],7
 049A                   .dbline 303
 049A           ;               }
 049A 804C              xjmp L98
 049C           L97:
 049C                   .dbline 305
 049C           ;               else
 049C           ;               {
 049C                   .dbline 306
 049C           ;                       if (MyPMSUnion.MyPMFrame.PM2_5_US > 75)
 049C 62D000            mov REG[0xd0],>_MyPMSUnion
 049F 504B              mov A,75
 04A1 1207              sub A,[_MyPMSUnion+6+1]
 04A3 5000              mov A,0
 04A5 1A06              sbb A,[_MyPMSUnion+6]
 04A7 D00C              jnc L102
 04A9           X13:
 04A9                   .dbline 308
 04A9           ;                       {
 04A9           ;                               DisplayBuf[11] |= BIT5 + BIT4;
 04A9                   .dbline 308
 04A9 62D000            mov REG[0xd0],>_DisplayBuf
 04AC 2E0B30            or [_DisplayBuf+11],48
 04AF                   .dbline 309
 04AF           ;                               DisplayBuf[10] |= BIT0 + BIT1;
 04AF 2E0A03            or [_DisplayBuf+10],3
 04B2                   .dbline 310
 04B2           ;                       }
 04B2 8034              xjmp L103
 04B4           L102:
 04B4                   .dbline 312
 04B4           ;                       else 
 04B4           ;                       {
 04B4                   .dbline 313
 04B4           ;                               if (MyPMSUnion.MyPMFrame.PM2_5_US > 50)
 04B4 62D000            mov REG[0xd0],>_MyPMSUnion
 04B7 5032              mov A,50
 04B9 1207              sub A,[_MyPMSUnion+6+1]
 04BB 5000              mov A,0
 04BD 1A06              sbb A,[_MyPMSUnion+6]
 04BF D00C              jnc L107
 04C1           X14:
 04C1                   .dbline 315
 04C1           ;                               {
 04C1           ;                                       DisplayBuf[11] |= BIT5 + BIT4;
 04C1                   .dbline 315
 04C1 62D000            mov REG[0xd0],>_DisplayBuf
 04C4 2E0B30            or [_DisplayBuf+11],48
 04C7                   .dbline 316
 04C7           ;                                       DisplayBuf[10] |= BIT0;
 04C7 2E0A01            or [_DisplayBuf+10],1
 04CA                   .dbline 317
 04CA           ;                               }
 04CA 801C              xjmp L108
 04CC           L107:
 04CC                   .dbline 319
 04CC           ;                               else 
 04CC           ;                               {
 04CC                   .dbline 320
 04CC           ;                                       if (MyPMSUnion.MyPMFrame.PM2_5_US > 25)
 04CC 62D000            mov REG[0xd0],>_MyPMSUnion
 04CF 5019              mov A,25
 04D1 1207              sub A,[_MyPMSUnion+6+1]
 04D3 5000              mov A,0
 04D5 1A06              sbb A,[_MyPMSUnion+6]
 04D7 D009              jnc L112
 04D9           X15:
 04D9                   .dbline 321
 04D9           ;                                       DisplayBuf[11] |= BIT5 + BIT4;
 04D9 62D000            mov REG[0xd0],>_DisplayBuf
 04DC 2E0B30            or [_DisplayBuf+11],48
 04DF 8007              xjmp L113
 04E1           L112:
 04E1                   .dbline 323
 04E1           ;                                       else
 04E1           ;                                       DisplayBuf[11] |= BIT5;
 04E1 62D000            mov REG[0xd0],>_DisplayBuf
 04E4 2E0B20            or [_DisplayBuf+11],32
 04E7           L113:
 04E7                   .dbline 324
 04E7           ;                               }
 04E7           L108:
 04E7                   .dbline 325
 04E7           ;                       }
 04E7           L103:
 04E7                   .dbline 326
 04E7           ;               }
 04E7           L98:
 04E7                   .dbline 327
 04E7           ;       }
 04E7           L93:
 04E7                   .dbline 329
 04E7           ;       
 04E7           ;       if (Odor > 4)
 04E7 62D000            mov REG[0xd0],>_Odor
 04EA 5004              mov A,4
 04EC 3A00              cmp A,[_Odor]
 04EE D00C              jnc L117
 04F0           X16:
 04F0                   .dbline 331
 04F0           ;       {
 04F0           ;               DisplayBuf[11] |= BIT0 + BIT1;
 04F0                   .dbline 331
 04F0 62D000            mov REG[0xd0],>_DisplayBuf
 04F3 2E0B03            or [_DisplayBuf+11],3
 04F6                   .dbline 332
 04F6           ;               DisplayBuf[10] |= BIT4 + BIT5 + BIT6 + BIT7;
 04F6 2E0AF0            or [_DisplayBuf+10],-16
 04F9                   .dbline 333
 04F9           ;       }
 04F9 8054              xjmp L118
 04FB           L117:
 04FB                   .dbline 335
 04FB           ;       else 
 04FB           ;       {
 04FB                   .dbline 336
 04FB           ;               if (Odor > 3)
 04FB 62D000            mov REG[0xd0],>_Odor
 04FE 5003              mov A,3
 0500 3A00              cmp A,[_Odor]
 0502 D00C              jnc L121
 0504           X17:
 0504                   .dbline 338
 0504           ;               {
 0504           ;                       DisplayBuf[11] |= BIT0 + BIT1;
 0504                   .dbline 338
 0504 62D000            mov REG[0xd0],>_DisplayBuf
 0507 2E0B03            or [_DisplayBuf+11],3
 050A                   .dbline 339
 050A           ;                       DisplayBuf[10] |= BIT4 + BIT5 + BIT6;
 050A 2E0A70            or [_DisplayBuf+10],112
 050D                   .dbline 340
 050D           ;               }
 050D 8040              xjmp L122
 050F           L121:
 050F                   .dbline 342
 050F           ;               else
 050F           ;               {
 050F                   .dbline 343
 050F           ;                       if (Odor > 2)
 050F 62D000            mov REG[0xd0],>_Odor
 0512 5002              mov A,2
 0514 3A00              cmp A,[_Odor]
 0516 D00C              jnc L125
 0518           X18:
 0518                   .dbline 345
 0518           ;                       {
 0518           ;                               DisplayBuf[11] |= BIT0 + BIT1;
 0518                   .dbline 345
 0518 62D000            mov REG[0xd0],>_DisplayBuf
 051B 2E0B03            or [_DisplayBuf+11],3
 051E                   .dbline 346
 051E           ;                               DisplayBuf[10] |= BIT4 + BIT5;
 051E 2E0A30            or [_DisplayBuf+10],48
 0521                   .dbline 347
 0521           ;                       }
 0521 802C              xjmp L126
 0523           L125:
 0523                   .dbline 349
 0523           ;                       else 
 0523           ;                       {
 0523                   .dbline 350
 0523           ;                               if (Odor > 1)
 0523 62D000            mov REG[0xd0],>_Odor
 0526 5001              mov A,1
 0528 3A00              cmp A,[_Odor]
 052A D00C              jnc L129
 052C           X19:
 052C                   .dbline 352
 052C           ;                               {
 052C           ;                                       DisplayBuf[11] |= BIT0 + BIT1;
 052C                   .dbline 352
 052C 62D000            mov REG[0xd0],>_DisplayBuf
 052F 2E0B03            or [_DisplayBuf+11],3
 0532                   .dbline 353
 0532           ;                                       DisplayBuf[10] |= BIT4;
 0532 2E0A10            or [_DisplayBuf+10],16
 0535                   .dbline 354
 0535           ;                               }
 0535 8018              xjmp L130
 0537           L129:
 0537                   .dbline 356
 0537           ;                               else 
 0537           ;                               {
 0537                   .dbline 357
 0537           ;                                       if (Odor > 0)
 0537 62D000            mov REG[0xd0],>_Odor
 053A 5000              mov A,0
 053C 3A00              cmp A,[_Odor]
 053E D009              jnc L133
 0540           X20:
 0540                   .dbline 358
 0540           ;                                       DisplayBuf[11] |= BIT0 + BIT1;
 0540 62D000            mov REG[0xd0],>_DisplayBuf
 0543 2E0B03            or [_DisplayBuf+11],3
 0546 8007              xjmp L134
 0548           L133:
 0548                   .dbline 360
 0548           ;                                       else
 0548           ;                                       DisplayBuf[11] |= BIT1;
 0548 62D000            mov REG[0xd0],>_DisplayBuf
 054B 2E0B02            or [_DisplayBuf+11],2
 054E           L134:
 054E                   .dbline 361
 054E           ;                               }
 054E           L130:
 054E                   .dbline 362
 054E           ;                       }
 054E           L126:
 054E                   .dbline 363
 054E           ;               }
 054E           L122:
 054E                   .dbline 364
 054E           ;       }
 054E           L118:
 054E                   .dbline 366
 054E           ;       
 054E           ;       DisplayBuf[5] |= BIT3;
 054E 62D000            mov REG[0xd0],>_DisplayBuf
 0551 2E0508            or [_DisplayBuf+5],8
 0554                   .dbline 367
 0554           ;       DisplayBuf[6] |= BIT2 + BIT3;
 0554 2E060C            or [_DisplayBuf+6],12
 0557                   .dbline 368
 0557           ;       DisplayBuf[7] |= BIT6 + BIT7;
 0557 2E07C0            or [_DisplayBuf+7],-64
 055A                   .dbline 369
 055A           ;       DisplayBuf[11] |= BIT2 + BIT6;
 055A 2E0B44            or [_DisplayBuf+11],68
 055D                   .dbline 370
 055D           ;       WriteAll_1621(0,DisplayBuf,12);
 055D 500C              mov A,12
 055F 08                push A
 0560 5000              mov A,>_DisplayBuf
 0562 08                push A
 0563 5000              mov A,<_DisplayBuf
 0565 08                push A
 0566 5000              mov A,0
 0568 08                push A
 0569 7C0000            xcall _WriteAll_1621
 056C 38FC              add SP,-4
 056E                   .dbline -2
 056E           L39:
 056E 38FF              add SP,-1
 0570 20                pop X
 0571                   .dbline 0 ; func end
 0571 7F                ret
 0572                   .dbsym l k 0 c
 0572                   .dbend
                        .area data(ram, con, rel)
 0000                   .dbfile C:\chendong\MYDOCU~1\code\LCD_DI~1\LCD_DI~1\LCD_DI~1\lcd.c
 0000           _DisplayNum::
 0000 000000            .byte 0,0,0
 0003                   .dbsym e DisplayNum _DisplayNum A[3:3]c
