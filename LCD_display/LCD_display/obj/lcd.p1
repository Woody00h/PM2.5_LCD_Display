Version 3.2 HI-TECH Software Intermediate Code
[; ;HT1621B.h: 19: void SendBit_1621(unsigned char data,unsigned char cnt);

[; ;HT1621B.h: 20: void SendDataBit_1621(unsigned char data,unsigned char cnt);

[; ;HT1621B.h: 21: void SendCmd(unsigned char command);

[; ;HT1621B.h: 22: void Write_1621(unsigned char addr,unsigned char data);

[; ;HT1621B.h: 23: void WriteAll_1621(unsigned char addr,unsigned char *p,unsigned char cnt);

[; ;HT1621B.h: 24: void HT1621B_Init(void);

[; ;HT1621B.h: 25: void delay_us(unsigned int us);

[; ;HT1621B.h: 26: void delay_ms(unsigned char ms);

"4 ./ParticleSensor.h
[v _u16 `ui 1 t ]
[; ;ParticleSensor.h: 4: typedef unsigned int u16;

"23
[s S1 `ui 1 `ui 1 `ui 1 `ui 1 `ui 1 `ui 1 `ui 1 `ui 1 `ui 1 `ui 1 `ui 1 `ui 1 ]
[n S1 . Head Length PM1_0_US PM2_5_US PM10_US PM1_0_CN PM2_5_CN PM10_CN Reserve1 Reserve2 Reserve3 checksum ]
[v _PMFrameField `S1 1 t ]
[; ;ParticleSensor.h: 9: typedef struct

[; ;ParticleSensor.h: 10: {

[; ;ParticleSensor.h: 11: u16 Head;

[; ;ParticleSensor.h: 12: u16 Length;

[; ;ParticleSensor.h: 13: u16 PM1_0_US;

[; ;ParticleSensor.h: 14: u16 PM2_5_US;

[; ;ParticleSensor.h: 15: u16 PM10_US;

[; ;ParticleSensor.h: 16: u16 PM1_0_CN;

[; ;ParticleSensor.h: 17: u16 PM2_5_CN;

[; ;ParticleSensor.h: 18: u16 PM10_CN;

[; ;ParticleSensor.h: 19: u16 Reserve1;

[; ;ParticleSensor.h: 20: u16 Reserve2;

[; ;ParticleSensor.h: 21: u16 Reserve3;

[; ;ParticleSensor.h: 22: u16 checksum;

[; ;ParticleSensor.h: 23: }PMFrameField;

"29
[u S2 `uc -> 40 `i `S1 1 ]
[n S2 . PMRxBuf MyPMFrame ]
[v _PMSFrameUnion `S2 1 t ]
[; ;ParticleSensor.h: 25: typedef union

[; ;ParticleSensor.h: 26: {

[; ;ParticleSensor.h: 27: unsigned char PMRxBuf[40];

[; ;ParticleSensor.h: 28: PMFrameField MyPMFrame;

[; ;ParticleSensor.h: 29: }PMSFrameUnion;

[; ;ParticleSensor.h: 37: extern unsigned char HeadFlag;

[; ;ParticleSensor.h: 38: extern unsigned char HeadPointer;

[; ;ParticleSensor.h: 39: extern unsigned char DataPtr;

[; ;ParticleSensor.h: 40: extern unsigned char PMSFrameFlag;

[; ;ParticleSensor.h: 41: extern PMSFrameUnion MyPMSUnion;

[; ;ParticleSensor.h: 42: extern unsigned char FrameCheck(void);

[; ;ParticleSensor.h: 43: extern unsigned int data_pm2_5;

[; ;ParticleSensor.h: 44: extern unsigned int data_pm1_0;

[; ;ParticleSensor.h: 45: extern unsigned char RecTimeoutTimer;

[; ;Si7020.h: 30: extern unsigned char Si7020SendCommand(unsigned char cmd);

[; ;Si7020.h: 31: extern void Si7020Read_RH_NHM(unsigned char * buffer);

[; ;Si7020.h: 32: extern unsigned char Si7020Read_Temp_after_RHM(unsigned char * buffer);

[; ;Si7020.h: 33: extern signed char Si7020CalcTemp(unsigned int data);

[; ;Si7020.h: 34: extern unsigned char Si7020CalcRH(unsigned int data);

[; ;Si7020.h: 35: extern unsigned char CRC8Check();

[; ;Si7020.h: 36: extern void LeftRotate();

[; ;Si7020.h: 37: extern void Si7020Init();

[; ;Si7020.h: 39: extern unsigned char Humidity;

[; ;Si7020.h: 40: extern signed char Temperature;

[; ;Si7020.h: 41: extern unsigned char RecBuf[5];

[; ;Si7020.h: 42: extern unsigned int Si7020Data;

"10 ./LCD.h
[v _DigitSeg `Cuc -> 0 `x e ]
[i _DigitSeg
:U ..
-> -> 245 `i `uc
-> -> 96 `i `uc
-> -> 182 `i `uc
-> -> 242 `i `uc
-> -> 99 `i `uc
-> -> 211 `i `uc
-> -> 215 `i `uc
-> -> 112 `i `uc
-> -> 247 `i `uc
-> -> 243 `i `uc
..
][; ;LCD.h: 10: const unsigned char DigitSeg[] ={0xf5,0x60,0xb6,0xf2,0x63,0xd3,0xd7,0x70,0xf7,0xf3};

"11
[v _DigitSegSwap `Cuc -> 0 `x e ]
[i _DigitSegSwap
:U ..
-> -> 95 `i `uc
-> -> 6 `i `uc
-> -> 107 `i `uc
-> -> 47 `i `uc
-> -> 54 `i `uc
-> -> 61 `i `uc
-> -> 125 `i `uc
-> -> 7 `i `uc
-> -> 127 `i `uc
-> -> 63 `i `uc
..
][; ;LCD.h: 11: const unsigned char DigitSegSwap[]={0x5f,0x06,0x6b,0x2f,0x36,0x3d,0x7d,0x07,0x7f,0x3f};

"18
[v _DisplayBuf `uc -> 12 `i e ]
[; ;LCD.h: 18: unsigned char DisplayBuf[12];

"19
[v _DisplayNum `uc -> 3 `i e ]
[; ;LCD.h: 19: unsigned char DisplayNum[3];

"20
[v _LifeFlag `uc 1 e ]
[; ;LCD.h: 20: unsigned char LifeFlag;

"21
[v _RH_T_Flag `uc 1 e ]
[; ;LCD.h: 21: unsigned char RH_T_Flag;

"22
[v _mode `uc 1 e ]
[; ;LCD.h: 22: unsigned char mode;

"23
[v _LockStatus `uc 1 e ]
[; ;LCD.h: 23: unsigned char LockStatus;

"24
[v _Plasma `uc 1 e ]
[; ;LCD.h: 24: unsigned char Plasma;

"25
[v _PlasmaFlag `uc 1 e ]
[; ;LCD.h: 25: unsigned char PlasmaFlag;

"26
[v _Odor `uc 1 e ]
[; ;LCD.h: 26: unsigned char Odor;

"27
[v _FanFlag `uc 1 e ]
[; ;LCD.h: 27: unsigned char FanFlag;

"28
[v _SpeedLvl `uc 1 e ]
[; ;LCD.h: 28: unsigned char SpeedLvl;

"29
[v _PM_Flag `uc 1 e ]
[; ;LCD.h: 29: unsigned char PM_Flag;

"30
[v _HeapLife `uc 1 e ]
[; ;LCD.h: 30: unsigned char HeapLife;

"31
[v _CarbonLife `uc 1 e ]
[; ;LCD.h: 31: unsigned char CarbonLife;

"32
[v _FanUpdateTimer `uc 1 e ]
[; ;LCD.h: 32: unsigned char FanUpdateTimer;

"33
[v _PlasmaTimer `uc 1 e ]
[; ;LCD.h: 33: unsigned char PlasmaTimer;

"34
[v _FanUpdateTimeReload `uc 1 e ]
[; ;LCD.h: 34: unsigned char FanUpdateTimeReload;

"35
[v _Timer `uc 1 e ]
[; ;LCD.h: 35: unsigned char Timer;

[; ;LCD.h: 37: void LCD_Init();

[; ;LCD.h: 38: void DisplayPMxx(unsigned int pm);

[; ;LCD.h: 39: void ShowLife(unsigned char life);

[; ;LCD.h: 40: void ShowHumiTemp(signed char value);

[; ;LCD.h: 41: void LCDOuputAll(void);

"4 C:\Program Files (x86)\HI-TECH Software\HCPSOC\PRO\9.61\include\stdlib.h
[v _ptrdiff_t `i 1 t ]
[; ;stdlib.h: 4: typedef int ptrdiff_t;

"5
[v _size_t `ui 1 t ]
[; ;stdlib.h: 5: typedef unsigned size_t;

"6
[v _wchar_t `us 1 t ]
[; ;stdlib.h: 6: typedef unsigned short wchar_t;

[; ;stdlib.h: 16: extern int errno;

"47
[s S3 `i 1 `i 1 ]
[n S3 . quot rem ]
[v _div_t `S3 1 t ]
[; ;stdlib.h: 44: typedef struct {

[; ;stdlib.h: 45: int quot;

[; ;stdlib.h: 46: int rem;

[; ;stdlib.h: 47: } div_t;

"51
[s S4 `ui 1 `ui 1 ]
[n S4 . quot rem ]
[v _udiv_t `S4 1 t ]
[; ;stdlib.h: 48: typedef struct {

[; ;stdlib.h: 49: unsigned quot;

[; ;stdlib.h: 50: unsigned rem;

[; ;stdlib.h: 51: } udiv_t;

"55
[s S5 `l 1 `l 1 ]
[n S5 . quot rem ]
[v _ldiv_t `S5 1 t ]
[; ;stdlib.h: 52: typedef struct {

[; ;stdlib.h: 53: long quot;

[; ;stdlib.h: 54: long rem;

[; ;stdlib.h: 55: } ldiv_t;

"59
[s S6 `ul 1 `ul 1 ]
[n S6 . quot rem ]
[v _uldiv_t `S6 1 t ]
[; ;stdlib.h: 56: typedef struct {

[; ;stdlib.h: 57: unsigned long quot;

[; ;stdlib.h: 58: unsigned long rem;

[; ;stdlib.h: 59: } uldiv_t;

[; ;stdlib.h: 65: extern double atof(const char *);

[; ;stdlib.h: 66: extern double strtod(const char *, const char **);

[; ;stdlib.h: 67: extern int atoi(const char *);

[; ;stdlib.h: 68: extern unsigned xtoi(const char *);

[; ;stdlib.h: 69: extern long atol(const char *);

[; ;stdlib.h: 70: extern long strtol(const char *, char **, int);

[; ;stdlib.h: 72: extern int rand(void);

[; ;stdlib.h: 73: extern void srand(unsigned int);

[; ;stdlib.h: 74: extern void * calloc(size_t, size_t);

[; ;stdlib.h: 75: extern div_t div(int numer, int denom);

[; ;stdlib.h: 76: extern udiv_t udiv(unsigned numer, unsigned denom);

[; ;stdlib.h: 77: extern ldiv_t ldiv(long numer, long denom);

[; ;stdlib.h: 78: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);

[; ;stdlib.h: 79: extern unsigned long _lrotl(unsigned long value, unsigned int shift);

[; ;stdlib.h: 80: extern unsigned long _lrotr(unsigned long value, unsigned int shift);

[; ;stdlib.h: 81: extern unsigned int _rotl(unsigned int value, unsigned int shift);

[; ;stdlib.h: 82: extern unsigned int _rotr(unsigned int value, unsigned int shift);

[; ;stdlib.h: 106: extern void * malloc(size_t);

[; ;stdlib.h: 107: extern void free(void *);

[; ;stdlib.h: 108: extern void * realloc(void *, size_t);

[; ;stdlib.h: 122: extern void abort(void);

[; ;stdlib.h: 123: extern void exit(int);

"124
[v F175 `(v 1 tf ]
[; ;stdlib.h: 124: extern int atexit(void (*)(void));

[; ;stdlib.h: 125: extern char * getenv(const char *);

[; ;stdlib.h: 126: extern char ** environ;

[; ;stdlib.h: 127: extern int system(char *);

"128
[v F187 `(i 1 tf2`*Cv`*Cv ]
[; ;stdlib.h: 128: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));

"129
[v F196 `(i 1 tf2`*Cv`*Cv ]
[; ;stdlib.h: 129: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));

[; ;stdlib.h: 130: extern int abs(int);

[; ;stdlib.h: 131: extern long labs(long);

[; ;stdlib.h: 145: extern char * itoa(char * buf, int val, int base);

[; ;stdlib.h: 146: extern char * utoa(char * buf, unsigned val, int base);

[; ;stdlib.h: 147: extern char * ltoa(char * buf, long val, int base);

[; ;stdlib.h: 148: extern char * ultoa(char * buf, unsigned long val, int base);

[; ;stdlib.h: 150: extern char * ftoa(float f, int * status);

[; ;lcd.c: 9: extern unsigned char Timer;

"13 ./lcd.c
[v _DisplayPMxx `(v 1 ef1`ui ]
{
[; ;lcd.c: 12: void DisplayPMxx(unsigned int pm)

[; ;lcd.c: 13: {

[e :U _DisplayPMxx ]
[v _pm `ui 1 r1 ]
[f ]
"14
[v _k `uc 1 a ]
[; ;lcd.c: 14: char k = 0;

[e = _k -> -> 0 `i `uc ]
"15
[v _index `ui 1 a ]
"16
[v _temp `ui 1 a ]
[; ;lcd.c: 15: unsigned int index;

[; ;lcd.c: 16: unsigned int temp;

[; ;lcd.c: 18: temp = pm;

"18
[e = _temp _pm ]
[; ;lcd.c: 19: if(temp > 999)

"19
[e $ ! > _temp -> -> 999 `i `ui 8  ]
[; ;lcd.c: 20: {

"20
{
[; ;lcd.c: 21: temp = 999;

"21
[e = _temp -> -> 999 `i `ui ]
"22
}
[e :U 8 ]
[; ;lcd.c: 22: }

[; ;lcd.c: 24: index = temp/100;

"24
[e = _index / _temp -> -> 100 `i `ui ]
[; ;lcd.c: 25: DisplayNum[0] = index;

"25
[e = *U + &U _DisplayNum * -> -> -> 0 `i `ui `ux -> -> # *U &U _DisplayNum `ui `ux -> _index `uc ]
[; ;lcd.c: 27: temp = temp%100;

"27
[e = _temp % _temp -> -> 100 `i `ui ]
[; ;lcd.c: 28: index = temp/10;

"28
[e = _index / _temp -> -> 10 `i `ui ]
[; ;lcd.c: 29: DisplayNum[1] = index;

"29
[e = *U + &U _DisplayNum * -> -> -> 1 `i `ui `ux -> -> # *U &U _DisplayNum `ui `ux -> _index `uc ]
[; ;lcd.c: 31: index = temp%10;

"31
[e = _index % _temp -> -> 10 `i `ui ]
[; ;lcd.c: 32: DisplayNum[2] = index;

"32
[e = *U + &U _DisplayNum * -> -> -> 2 `i `ui `ux -> -> # *U &U _DisplayNum `ui `ux -> _index `uc ]
[; ;lcd.c: 34: k = 0;

"34
[e = _k -> -> 0 `i `uc ]
[; ;lcd.c: 35: while (k<2)

"35
[e $U 9  ]
[e :U 10 ]
[; ;lcd.c: 36: {

"36
{
[; ;lcd.c: 37: if (DisplayNum[k])

"37
[e $ ! != -> *U + &U _DisplayNum * -> _k `ux -> -> # *U &U _DisplayNum `ui `ux `i -> -> -> 0 `i `uc `i 12  ]
[; ;lcd.c: 38: {

"38
{
[; ;lcd.c: 39: DisplayBuf[k] = DigitSeg[DisplayNum[k]];

"39
[e = *U + &U _DisplayBuf * -> _k `ux -> -> # *U &U _DisplayBuf `ui `ux *U + &U _DigitSeg * -> *U + &U _DisplayNum * -> _k `ux -> -> # *U &U _DisplayNum `ui `ux `ux -> -> # *U &U _DigitSeg `ui `ux ]
[; ;lcd.c: 40: k++;

"40
[e ++ _k -> -> 1 `i `uc ]
[; ;lcd.c: 41: break;

"41
[e $U 11  ]
"42
}
[; ;lcd.c: 42: }

[e $U 13  ]
"43
[e :U 12 ]
[; ;lcd.c: 43: else

[; ;lcd.c: 44: {

"44
{
[; ;lcd.c: 45: DisplayBuf[k] = 0;

"45
[e = *U + &U _DisplayBuf * -> _k `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 0 `i `uc ]
"46
}
[e :U 13 ]
[; ;lcd.c: 46: }

[; ;lcd.c: 47: k++;

"47
[e ++ _k -> -> 1 `i `uc ]
"48
}
[e :U 9 ]
"35
[e $ < -> _k `i -> 2 `i 10  ]
[e :U 11 ]
[; ;lcd.c: 48: }

[; ;lcd.c: 50: for (;k<3;k++)

"50
{
[e $ < -> _k `i -> 3 `i 14  ]
[e $U 15  ]
"51
[e :U 14 ]
[; ;lcd.c: 51: {

{
[; ;lcd.c: 52: DisplayBuf[k] = DigitSeg[DisplayNum[k]];

"52
[e = *U + &U _DisplayBuf * -> _k `ux -> -> # *U &U _DisplayBuf `ui `ux *U + &U _DigitSeg * -> *U + &U _DisplayNum * -> _k `ux -> -> # *U &U _DisplayNum `ui `ux `ux -> -> # *U &U _DigitSeg `ui `ux ]
"53
}
"50
[e ++ _k -> -> 1 `i `uc ]
[e $ < -> _k `i -> 3 `i 14  ]
[e :U 15 ]
"53
}
"54
[; ;lcd.c: 53: }

[; ;lcd.c: 54: }

[e :UE 7 ]
}
"57
[v _ShowLife `(v 1 ef1`uc ]
{
[; ;lcd.c: 56: void ShowLife(unsigned char life)

[; ;lcd.c: 57: {

[e :U _ShowLife ]
[v _life `uc 1 r1 ]
[f ]
"58
[v _temp `uc 1 a ]
[; ;lcd.c: 58: unsigned char temp = life;

[e = _temp _life ]
"59
[v _index `uc 1 a ]
[; ;lcd.c: 59: unsigned char index;

[; ;lcd.c: 60: if (temp > 99)

"60
[e $ ! > -> _temp `i -> 99 `i 18  ]
[; ;lcd.c: 61: {

"61
{
[; ;lcd.c: 62: temp = 99;

"62
[e = _temp -> -> 99 `i `uc ]
"63
}
[e :U 18 ]
[; ;lcd.c: 63: }

[; ;lcd.c: 65: index = temp/10;

"65
[e = _index -> / -> _temp `i -> 10 `i `uc ]
[; ;lcd.c: 66: if(index)

"66
[e $ ! != -> _index `i -> -> -> 0 `i `uc `i 19  ]
[; ;lcd.c: 67: {

"67
{
[; ;lcd.c: 68: DisplayBuf[3] = DigitSeg[index];

"68
[e = *U + &U _DisplayBuf * -> -> -> 3 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux *U + &U _DigitSeg * -> _index `ux -> -> # *U &U _DigitSeg `ui `ux ]
"69
}
[; ;lcd.c: 69: }

[e $U 20  ]
"70
[e :U 19 ]
[; ;lcd.c: 70: else

[; ;lcd.c: 71: {

"71
{
[; ;lcd.c: 72: DisplayBuf[3] = 0;

"72
[e = *U + &U _DisplayBuf * -> -> -> 3 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 0 `i `uc ]
"73
}
[e :U 20 ]
[; ;lcd.c: 73: }

[; ;lcd.c: 75: index = temp%10;

"75
[e = _index -> % -> _temp `i -> 10 `i `uc ]
[; ;lcd.c: 76: DisplayBuf[4] = DigitSeg[index];

"76
[e = *U + &U _DisplayBuf * -> -> -> 4 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux *U + &U _DigitSeg * -> _index `ux -> -> # *U &U _DigitSeg `ui `ux ]
"77
[; ;lcd.c: 77: }

[e :UE 17 ]
}
"79
[v _ShowHumiTemp `(v 1 ef1`c ]
{
[; ;lcd.c: 78: void ShowHumiTemp(signed char value)

[; ;lcd.c: 79: {

[e :U _ShowHumiTemp ]
[v _value `c 1 r1 ]
[f ]
"80
[v _temp `c 1 a ]
[; ;lcd.c: 80: signed char temp = value;

[e = _temp _value ]
"81
[v _index `uc 1 a ]
[; ;lcd.c: 81: unsigned char index;

[; ;lcd.c: 82: if (temp > 99)

"82
[e $ ! > -> _temp `i -> 99 `i 22  ]
[; ;lcd.c: 83: {

"83
{
[; ;lcd.c: 84: temp = 99;

"84
[e = _temp -> -> 99 `i `c ]
"85
}
[e :U 22 ]
[; ;lcd.c: 85: }

[; ;lcd.c: 87: if (temp < 0)

"87
[e $ ! < -> _temp `i -> 0 `i 23  ]
[; ;lcd.c: 88: {

"88
{
[; ;lcd.c: 89: DisplayBuf[9] = 0x20;

"89
[e = *U + &U _DisplayBuf * -> -> -> 9 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 32 `i `uc ]
[; ;lcd.c: 90: temp = abs(temp);

"130 C:\Program Files (x86)\HI-TECH Software\HCPSOC\PRO\9.61\include\stdlib.h
[v _abs `(i 0 ef1`i ]
"90 ./lcd.c
[e = _temp -> ( _abs (1
 -> _temp `i `c ]
[; ;lcd.c: 91: if (temp > 9)

"91
[e $ ! > -> _temp `i -> 9 `i 24  ]
[; ;lcd.c: 92: {

"92
{
[; ;lcd.c: 93: temp = 9;

"93
[e = _temp -> -> 9 `i `c ]
"94
}
[e :U 24 ]
[; ;lcd.c: 94: }

[; ;lcd.c: 95: DisplayBuf[8] = DigitSegSwap[temp];

"95
[e = *U + &U _DisplayBuf * -> -> -> 8 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux *U + &U _DigitSegSwap * -> -> _temp `uc `ux -> -> # *U &U _DigitSegSwap `ui `ux ]
"96
}
[; ;lcd.c: 96: }

[e $U 25  ]
"97
[e :U 23 ]
[; ;lcd.c: 97: else

[; ;lcd.c: 98: {

"98
{
[; ;lcd.c: 99: index = temp/10;

"99
[e = _index -> / -> _temp `i -> 10 `i `uc ]
[; ;lcd.c: 100: if(index)

"100
[e $ ! != -> _index `i -> -> -> 0 `i `uc `i 26  ]
[; ;lcd.c: 101: {

"101
{
[; ;lcd.c: 102: DisplayBuf[9] = DigitSegSwap[index];

"102
[e = *U + &U _DisplayBuf * -> -> -> 9 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux *U + &U _DigitSegSwap * -> _index `ux -> -> # *U &U _DigitSegSwap `ui `ux ]
"103
}
[; ;lcd.c: 103: }

[e $U 27  ]
"104
[e :U 26 ]
[; ;lcd.c: 104: else

[; ;lcd.c: 105: {

"105
{
[; ;lcd.c: 106: DisplayBuf[9] = 0;

"106
[e = *U + &U _DisplayBuf * -> -> -> 9 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 0 `i `uc ]
"107
}
[e :U 27 ]
[; ;lcd.c: 107: }

[; ;lcd.c: 109: index = temp%10;

"109
[e = _index -> % -> _temp `i -> 10 `i `uc ]
[; ;lcd.c: 110: DisplayBuf[8] = DigitSegSwap[index];

"110
[e = *U + &U _DisplayBuf * -> -> -> 8 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux *U + &U _DigitSegSwap * -> _index `ux -> -> # *U &U _DigitSegSwap `ui `ux ]
"111
}
[e :U 25 ]
"112
[; ;lcd.c: 111: }

[; ;lcd.c: 112: }

[e :UE 21 ]
}
"115
[v _LCDOuputAll `(v 1 ef ]
{
[; ;lcd.c: 114: void LCDOuputAll(void)

[; ;lcd.c: 115: {

[e :U _LCDOuputAll ]
[f ]
"116
[v _k `uc 1 a ]
[; ;lcd.c: 116: char k = 0;

[e = _k -> -> 0 `i `uc ]
[; ;lcd.c: 118: for (k=0;k<12;k++)

"118
{
[e = _k -> -> 0 `i `uc ]
[e $ < -> _k `i -> 12 `i 29  ]
[e $U 30  ]
"119
[e :U 29 ]
[; ;lcd.c: 119: {

{
[; ;lcd.c: 120: DisplayBuf[k] = 0;

"120
[e = *U + &U _DisplayBuf * -> _k `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 0 `i `uc ]
"121
}
"118
[e ++ _k -> -> 1 `i `uc ]
[e $ < -> _k `i -> 12 `i 29  ]
[e :U 30 ]
"121
}
[; ;lcd.c: 121: }

[; ;lcd.c: 126: if (PM_Flag == 0)

"126
[e $ ! == -> _PM_Flag `i -> 0 `i 32  ]
[; ;lcd.c: 127: {

"127
{
[; ;lcd.c: 128: DisplayPMxx(data_pm2_5);

"43 ./ParticleSensor.h
[v _data_pm2_5 `ui 0 e ]
"128 ./lcd.c
[e ( _DisplayPMxx (1
 _data_pm2_5 ]
[; ;lcd.c: 129: DisplayBuf[0] |= 0x8;

"129
[e =| *U + &U _DisplayBuf * -> -> -> 0 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 8 `i `uc ]
"130
}
[; ;lcd.c: 130: }

[e $U 33  ]
"131
[e :U 32 ]
[; ;lcd.c: 131: else

[; ;lcd.c: 132: {

"132
{
[; ;lcd.c: 133: DisplayPMxx(data_pm1_0);

"44 ./ParticleSensor.h
[v _data_pm1_0 `ui 0 e ]
"133 ./lcd.c
[e ( _DisplayPMxx (1
 _data_pm1_0 ]
[; ;lcd.c: 134: DisplayBuf[1] |= 0x8;

"134
[e =| *U + &U _DisplayBuf * -> -> -> 1 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 8 `i `uc ]
"135
}
[e :U 33 ]
[; ;lcd.c: 135: }

[; ;lcd.c: 136: DisplayBuf[2] |= 0x8;

"136
[e =| *U + &U _DisplayBuf * -> -> -> 2 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 8 `i `uc ]
[; ;lcd.c: 141: if (LifeFlag == 0)

"141
[e $ ! == -> _LifeFlag `i -> 0 `i 34  ]
[; ;lcd.c: 142: {

"142
{
[; ;lcd.c: 143: ShowLife(HeapLife);

"143
[e ( _ShowLife (1
 _HeapLife ]
[; ;lcd.c: 144: DisplayBuf[3] |= 0x8;

"144
[e =| *U + &U _DisplayBuf * -> -> -> 3 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 8 `i `uc ]
"146
}
[; ;lcd.c: 146: }

[e $U 35  ]
"147
[e :U 34 ]
[; ;lcd.c: 147: else

[; ;lcd.c: 148: {

"148
{
[; ;lcd.c: 149: ShowLife(CarbonLife);

"149
[e ( _ShowLife (1
 _CarbonLife ]
[; ;lcd.c: 150: DisplayBuf[4] |= 0x8;

"150
[e =| *U + &U _DisplayBuf * -> -> -> 4 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 8 `i `uc ]
"152
}
[e :U 35 ]
[; ;lcd.c: 152: }

[; ;lcd.c: 157: if (SpeedLvl > 8)

"157
[e $ ! > -> _SpeedLvl `i -> 8 `i 36  ]
[; ;lcd.c: 158: {

"158
{
[; ;lcd.c: 159: SpeedLvl = 8;

"159
[e = _SpeedLvl -> -> 8 `i `uc ]
"160
}
[e :U 36 ]
[; ;lcd.c: 160: }

[; ;lcd.c: 161: DisplayBuf[5] = DigitSeg[SpeedLvl];

"161
[e = *U + &U _DisplayBuf * -> -> -> 5 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux *U + &U _DigitSeg * -> _SpeedLvl `ux -> -> # *U &U _DigitSeg `ui `ux ]
[; ;lcd.c: 163: if(!FanUpdateTimer)

"163
[e $ ! ! != -> _FanUpdateTimer `i -> -> -> 0 `i `uc `i 37  ]
[; ;lcd.c: 164: {

"164
{
[; ;lcd.c: 165: FanUpdateTimer = FanUpdateTimeReload;

"165
[e = _FanUpdateTimer _FanUpdateTimeReload ]
[; ;lcd.c: 166: FanFlag ^= 1;

"166
[e =^ _FanFlag -> -> 1 `i `uc ]
"167
}
[e :U 37 ]
[; ;lcd.c: 167: }

[; ;lcd.c: 168: if (FanFlag)

"168
[e $ ! != -> _FanFlag `i -> -> -> 0 `i `uc `i 38  ]
[; ;lcd.c: 169: {

"169
{
[; ;lcd.c: 170: DisplayBuf[6] |= 0x1;

"170
[e =| *U + &U _DisplayBuf * -> -> -> 6 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 1 `i `uc ]
"172
}
[; ;lcd.c: 172: }

[e $U 39  ]
"173
[e :U 38 ]
[; ;lcd.c: 173: else

[; ;lcd.c: 174: {

"174
{
[; ;lcd.c: 175: DisplayBuf[6] |= 0x2;

"175
[e =| *U + &U _DisplayBuf * -> -> -> 6 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 2 `i `uc ]
"177
}
[e :U 39 ]
[; ;lcd.c: 177: }

[; ;lcd.c: 182: if (RH_T_Flag == 0)

"182
[e $ ! == -> _RH_T_Flag `i -> 0 `i 40  ]
[; ;lcd.c: 183: {

"183
{
[; ;lcd.c: 184: ShowHumiTemp(Humidity);

"39 ./Si7020.h
[v _Humidity `uc 0 e ]
"184 ./lcd.c
[e ( _ShowHumiTemp (1
 -> _Humidity `c ]
"188
}
[; ;lcd.c: 188: }

[e $U 41  ]
"189
[e :U 40 ]
[; ;lcd.c: 189: else

[; ;lcd.c: 190: {

"190
{
[; ;lcd.c: 191: if (RH_T_Flag == 1)

"191
[e $ ! == -> _RH_T_Flag `i -> 1 `i 42  ]
[; ;lcd.c: 192: {

"192
{
[; ;lcd.c: 193: ShowHumiTemp(Temperature);

"40 ./Si7020.h
[v _Temperature `c 0 e ]
"193 ./lcd.c
[e ( _ShowHumiTemp (1
 _Temperature ]
[; ;lcd.c: 196: DisplayBuf[7] |= 0x20;

"196
[e =| *U + &U _DisplayBuf * -> -> -> 7 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 32 `i `uc ]
"197
}
[; ;lcd.c: 197: }

[e $U 43  ]
"198
[e :U 42 ]
[; ;lcd.c: 198: else

[; ;lcd.c: 199: {

"199
{
[; ;lcd.c: 200: ShowHumiTemp(Timer);

"200
[e ( _ShowHumiTemp (1
 -> _Timer `c ]
[; ;lcd.c: 201: DisplayBuf[9] |= 0x80;

"201
[e =| *U + &U _DisplayBuf * -> -> -> 9 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 128 `i `uc ]
[; ;lcd.c: 202: DisplayBuf[7] |= 0x10;

"202
[e =| *U + &U _DisplayBuf * -> -> -> 7 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 16 `i `uc ]
"204
}
[e :U 43 ]
"205
}
[e :U 41 ]
[; ;lcd.c: 204: }

[; ;lcd.c: 205: }

[; ;lcd.c: 210: if (mode == 0)

"210
[e $ ! == -> _mode `i -> 0 `i 44  ]
[; ;lcd.c: 211: {

"211
{
[; ;lcd.c: 212: DisplayBuf[7] |= 0x2;

"212
[e =| *U + &U _DisplayBuf * -> -> -> 7 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 2 `i `uc ]
"214
}
[; ;lcd.c: 214: }

[e $U 45  ]
"215
[e :U 44 ]
[; ;lcd.c: 215: else

[; ;lcd.c: 216: {

"216
{
[; ;lcd.c: 217: DisplayBuf[7] |= 0x4;

"217
[e =| *U + &U _DisplayBuf * -> -> -> 7 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 4 `i `uc ]
"219
}
[e :U 45 ]
[; ;lcd.c: 219: }

[; ;lcd.c: 224: if (LockStatus)

"224
[e $ ! != -> _LockStatus `i -> -> -> 0 `i `uc `i 46  ]
[; ;lcd.c: 225: {

"225
{
[; ;lcd.c: 226: DisplayBuf[7] |= 0x1;

"226
[e =| *U + &U _DisplayBuf * -> -> -> 7 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 1 `i `uc ]
"227
}
[e :U 46 ]
[; ;lcd.c: 227: }

[; ;lcd.c: 236: if (Plasma)

"236
[e $ ! != -> _Plasma `i -> -> -> 0 `i `uc `i 47  ]
[; ;lcd.c: 237: {

"237
{
[; ;lcd.c: 238: DisplayBuf[6] |= 0x10;

"238
[e =| *U + &U _DisplayBuf * -> -> -> 6 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 16 `i `uc ]
[; ;lcd.c: 239: if (!PlasmaTimer)

"239
[e $ ! ! != -> _PlasmaTimer `i -> -> -> 0 `i `uc `i 48  ]
[; ;lcd.c: 240: {

"240
{
[; ;lcd.c: 241: PlasmaTimer = 24;

"241
[e = _PlasmaTimer -> -> 24 `i `uc ]
[; ;lcd.c: 242: if (PlasmaFlag == 0)

"242
[e $ ! == -> _PlasmaFlag `i -> 0 `i 49  ]
[; ;lcd.c: 243: {

"243
{
[; ;lcd.c: 244: PlasmaFlag = 1;

"244
[e = _PlasmaFlag -> -> 1 `i `uc ]
"245
}
[; ;lcd.c: 245: }

[e $U 50  ]
"246
[e :U 49 ]
[; ;lcd.c: 246: else

[; ;lcd.c: 247: {

"247
{
[; ;lcd.c: 248: if (PlasmaFlag == 1)

"248
[e $ ! == -> _PlasmaFlag `i -> 1 `i 51  ]
[; ;lcd.c: 249: {

"249
{
[; ;lcd.c: 250: PlasmaFlag = 2;

"250
[e = _PlasmaFlag -> -> 2 `i `uc ]
"251
}
[; ;lcd.c: 251: }

[e $U 52  ]
"252
[e :U 51 ]
[; ;lcd.c: 252: else

[; ;lcd.c: 253: {

"253
{
[; ;lcd.c: 254: PlasmaFlag = 0;

"254
[e = _PlasmaFlag -> -> 0 `i `uc ]
"255
}
[e :U 52 ]
"256
}
[e :U 50 ]
"257
}
[e :U 48 ]
"258
}
[e :U 47 ]
[; ;lcd.c: 255: }

[; ;lcd.c: 256: }

[; ;lcd.c: 257: }

[; ;lcd.c: 258: }

[; ;lcd.c: 259: if (PlasmaFlag == 1)

"259
[e $ ! == -> _PlasmaFlag `i -> 1 `i 53  ]
[; ;lcd.c: 260: {

"260
{
[; ;lcd.c: 261: DisplayBuf[6] |= 0x40;

"261
[e =| *U + &U _DisplayBuf * -> -> -> 6 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 64 `i `uc ]
"262
}
[; ;lcd.c: 262: }

[e $U 54  ]
"263
[e :U 53 ]
[; ;lcd.c: 263: else if (PlasmaFlag == 2)

[e $ ! == -> _PlasmaFlag `i -> 2 `i 55  ]
[; ;lcd.c: 264: {

"264
{
[; ;lcd.c: 265: DisplayBuf[6] |= 0x20 + 0x40;

"265
[e =| *U + &U _DisplayBuf * -> -> -> 6 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + -> 32 `i -> 64 `i `uc ]
"266
}
[e :U 55 ]
"272
[e :U 54 ]
[; ;lcd.c: 266: }

[; ;lcd.c: 272: if (MyPMSUnion.MyPMFrame.PM2_5_US > 150)

"41 ./ParticleSensor.h
[v _MyPMSUnion `S2 0 e ]
"272 ./lcd.c
[e $ ! > . . _MyPMSUnion 1 3 -> -> 150 `i `ui 56  ]
[; ;lcd.c: 273: {

"273
{
[; ;lcd.c: 274: DisplayBuf[11] |= 0x20 + 0x10;

"274
[e =| *U + &U _DisplayBuf * -> -> -> 11 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + -> 32 `i -> 16 `i `uc ]
[; ;lcd.c: 275: DisplayBuf[10] |= 0x1 + 0x2 + 0x4 + 0x8;

"275
[e =| *U + &U _DisplayBuf * -> -> -> 10 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + + + -> 1 `i -> 2 `i -> 4 `i -> 8 `i `uc ]
"276
}
[; ;lcd.c: 276: }

[e $U 57  ]
"277
[e :U 56 ]
[; ;lcd.c: 277: else

[; ;lcd.c: 278: {

"278
{
[; ;lcd.c: 279: if (MyPMSUnion.MyPMFrame.PM2_5_US > 100)

"279
[e $ ! > . . _MyPMSUnion 1 3 -> -> 100 `i `ui 58  ]
[; ;lcd.c: 280: {

"280
{
[; ;lcd.c: 281: DisplayBuf[11] |= 0x20 + 0x10;

"281
[e =| *U + &U _DisplayBuf * -> -> -> 11 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + -> 32 `i -> 16 `i `uc ]
[; ;lcd.c: 282: DisplayBuf[10] |= 0x1 + 0x2 + 0x4;

"282
[e =| *U + &U _DisplayBuf * -> -> -> 10 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + + -> 1 `i -> 2 `i -> 4 `i `uc ]
"283
}
[; ;lcd.c: 283: }

[e $U 59  ]
"284
[e :U 58 ]
[; ;lcd.c: 284: else

[; ;lcd.c: 285: {

"285
{
[; ;lcd.c: 286: if (MyPMSUnion.MyPMFrame.PM2_5_US > 75)

"286
[e $ ! > . . _MyPMSUnion 1 3 -> -> 75 `i `ui 60  ]
[; ;lcd.c: 287: {

"287
{
[; ;lcd.c: 288: DisplayBuf[11] |= 0x20 + 0x10;

"288
[e =| *U + &U _DisplayBuf * -> -> -> 11 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + -> 32 `i -> 16 `i `uc ]
[; ;lcd.c: 289: DisplayBuf[10] |= 0x1 + 0x2;

"289
[e =| *U + &U _DisplayBuf * -> -> -> 10 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + -> 1 `i -> 2 `i `uc ]
"290
}
[; ;lcd.c: 290: }

[e $U 61  ]
"291
[e :U 60 ]
[; ;lcd.c: 291: else

[; ;lcd.c: 292: {

"292
{
[; ;lcd.c: 293: if (MyPMSUnion.MyPMFrame.PM2_5_US > 50)

"293
[e $ ! > . . _MyPMSUnion 1 3 -> -> 50 `i `ui 62  ]
[; ;lcd.c: 294: {

"294
{
[; ;lcd.c: 295: DisplayBuf[11] |= 0x20 + 0x10;

"295
[e =| *U + &U _DisplayBuf * -> -> -> 11 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + -> 32 `i -> 16 `i `uc ]
[; ;lcd.c: 296: DisplayBuf[10] |= 0x1;

"296
[e =| *U + &U _DisplayBuf * -> -> -> 10 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 1 `i `uc ]
"297
}
[; ;lcd.c: 297: }

[e $U 63  ]
"298
[e :U 62 ]
[; ;lcd.c: 298: else

[; ;lcd.c: 299: {

"299
{
[; ;lcd.c: 300: if (MyPMSUnion.MyPMFrame.PM2_5_US > 25)

"300
[e $ ! > . . _MyPMSUnion 1 3 -> -> 25 `i `ui 64  ]
[; ;lcd.c: 301: DisplayBuf[11] |= 0x20 + 0x10;

"301
[e =| *U + &U _DisplayBuf * -> -> -> 11 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + -> 32 `i -> 16 `i `uc ]
[e $U 65  ]
"302
[e :U 64 ]
[; ;lcd.c: 302: else

[; ;lcd.c: 303: DisplayBuf[11] |= 0x20;

"303
[e =| *U + &U _DisplayBuf * -> -> -> 11 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 32 `i `uc ]
[e :U 65 ]
"304
}
[e :U 63 ]
"305
}
[e :U 61 ]
"306
}
[e :U 59 ]
"307
}
[e :U 57 ]
[; ;lcd.c: 304: }

[; ;lcd.c: 305: }

[; ;lcd.c: 306: }

[; ;lcd.c: 307: }

[; ;lcd.c: 309: if (Odor > 4)

"309
[e $ ! > -> _Odor `i -> 4 `i 66  ]
[; ;lcd.c: 310: {

"310
{
[; ;lcd.c: 311: DisplayBuf[11] |= 0x1 + 0x2;

"311
[e =| *U + &U _DisplayBuf * -> -> -> 11 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + -> 1 `i -> 2 `i `uc ]
[; ;lcd.c: 312: DisplayBuf[10] |= 0x10 + 0x20 + 0x40 + 0x80;

"312
[e =| *U + &U _DisplayBuf * -> -> -> 10 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + + + -> 16 `i -> 32 `i -> 64 `i -> 128 `i `uc ]
"313
}
[; ;lcd.c: 313: }

[e $U 67  ]
"314
[e :U 66 ]
[; ;lcd.c: 314: else

[; ;lcd.c: 315: {

"315
{
[; ;lcd.c: 316: if (Odor > 3)

"316
[e $ ! > -> _Odor `i -> 3 `i 68  ]
[; ;lcd.c: 317: {

"317
{
[; ;lcd.c: 318: DisplayBuf[11] |= 0x1 + 0x2;

"318
[e =| *U + &U _DisplayBuf * -> -> -> 11 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + -> 1 `i -> 2 `i `uc ]
[; ;lcd.c: 319: DisplayBuf[10] |= 0x10 + 0x20 + 0x40;

"319
[e =| *U + &U _DisplayBuf * -> -> -> 10 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + + -> 16 `i -> 32 `i -> 64 `i `uc ]
"320
}
[; ;lcd.c: 320: }

[e $U 69  ]
"321
[e :U 68 ]
[; ;lcd.c: 321: else

[; ;lcd.c: 322: {

"322
{
[; ;lcd.c: 323: if (Odor > 2)

"323
[e $ ! > -> _Odor `i -> 2 `i 70  ]
[; ;lcd.c: 324: {

"324
{
[; ;lcd.c: 325: DisplayBuf[11] |= 0x1 + 0x2;

"325
[e =| *U + &U _DisplayBuf * -> -> -> 11 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + -> 1 `i -> 2 `i `uc ]
[; ;lcd.c: 326: DisplayBuf[10] |= 0x10 + 0x20;

"326
[e =| *U + &U _DisplayBuf * -> -> -> 10 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + -> 16 `i -> 32 `i `uc ]
"327
}
[; ;lcd.c: 327: }

[e $U 71  ]
"328
[e :U 70 ]
[; ;lcd.c: 328: else

[; ;lcd.c: 329: {

"329
{
[; ;lcd.c: 330: if (Odor > 1)

"330
[e $ ! > -> _Odor `i -> 1 `i 72  ]
[; ;lcd.c: 331: {

"331
{
[; ;lcd.c: 332: DisplayBuf[11] |= 0x1 + 0x2;

"332
[e =| *U + &U _DisplayBuf * -> -> -> 11 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + -> 1 `i -> 2 `i `uc ]
[; ;lcd.c: 333: DisplayBuf[10] |= 0x10;

"333
[e =| *U + &U _DisplayBuf * -> -> -> 10 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 16 `i `uc ]
"334
}
[; ;lcd.c: 334: }

[e $U 73  ]
"335
[e :U 72 ]
[; ;lcd.c: 335: else

[; ;lcd.c: 336: {

"336
{
[; ;lcd.c: 337: if (Odor > 0)

"337
[e $ ! > -> _Odor `i -> 0 `i 74  ]
[; ;lcd.c: 338: DisplayBuf[11] |= 0x1 + 0x2;

"338
[e =| *U + &U _DisplayBuf * -> -> -> 11 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + -> 1 `i -> 2 `i `uc ]
[e $U 75  ]
"339
[e :U 74 ]
[; ;lcd.c: 339: else

[; ;lcd.c: 340: DisplayBuf[11] |= 0x2;

"340
[e =| *U + &U _DisplayBuf * -> -> -> 11 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 2 `i `uc ]
[e :U 75 ]
"341
}
[e :U 73 ]
"342
}
[e :U 71 ]
"343
}
[e :U 69 ]
"344
}
[e :U 67 ]
[; ;lcd.c: 341: }

[; ;lcd.c: 342: }

[; ;lcd.c: 343: }

[; ;lcd.c: 344: }

[; ;lcd.c: 346: DisplayBuf[5] |= 0x8;

"346
[e =| *U + &U _DisplayBuf * -> -> -> 5 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> -> 8 `i `uc ]
[; ;lcd.c: 347: DisplayBuf[6] |= 0x4 + 0x8;

"347
[e =| *U + &U _DisplayBuf * -> -> -> 6 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + -> 4 `i -> 8 `i `uc ]
[; ;lcd.c: 348: DisplayBuf[7] |= 0x40 + 0x80;

"348
[e =| *U + &U _DisplayBuf * -> -> -> 7 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + -> 64 `i -> 128 `i `uc ]
[; ;lcd.c: 349: DisplayBuf[11] |= 0x4 + 0x40;

"349
[e =| *U + &U _DisplayBuf * -> -> -> 11 `i `ui `ux -> -> # *U &U _DisplayBuf `ui `ux -> + -> 4 `i -> 64 `i `uc ]
[; ;lcd.c: 350: WriteAll_1621(0,DisplayBuf,12);

"23 ./HT1621B.h
[v _WriteAll_1621 `(v 0 ef3`uc`*uc`uc ]
"350 ./lcd.c
[e ( _WriteAll_1621 (3
 , , -> -> 0 `i `uc &U _DisplayBuf -> -> 12 `i `uc ]
"351
[; ;lcd.c: 351: }

[e :UE 28 ]
}
"354
[v _LCD_Init `(v 1 ef ]
{
[; ;lcd.c: 353: void LCD_Init()

[; ;lcd.c: 354: {

[e :U _LCD_Init ]
[f ]
[; ;lcd.c: 355: LifeFlag = 0;

"355
[e = _LifeFlag -> -> 0 `i `uc ]
[; ;lcd.c: 356: RH_T_Flag = 1;

"356
[e = _RH_T_Flag -> -> 1 `i `uc ]
[; ;lcd.c: 357: mode = 0;

"357
[e = _mode -> -> 0 `i `uc ]
[; ;lcd.c: 358: LockStatus = 1;

"358
[e = _LockStatus -> -> 1 `i `uc ]
[; ;lcd.c: 359: Plasma = 1;

"359
[e = _Plasma -> -> 1 `i `uc ]
[; ;lcd.c: 360: Odor = 3;

"360
[e = _Odor -> -> 3 `i `uc ]
[; ;lcd.c: 361: SpeedLvl = 1;

"361
[e = _SpeedLvl -> -> 1 `i `uc ]
[; ;lcd.c: 362: PM_Flag = 0;

"362
[e = _PM_Flag -> -> 0 `i `uc ]
[; ;lcd.c: 363: HeapLife = 85;

"363
[e = _HeapLife -> -> 85 `i `uc ]
[; ;lcd.c: 364: CarbonLife = 73;

"364
[e = _CarbonLife -> -> 73 `i `uc ]
[; ;lcd.c: 365: FanUpdateTimeReload = 24;

"365
[e = _FanUpdateTimeReload -> -> 24 `i `uc ]
"366
[; ;lcd.c: 366: }

[e :UE 76 ]
}
