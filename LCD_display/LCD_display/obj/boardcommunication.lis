 0000                   cpu LMM
                        .module boardcommunication.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./boardcommunication.c
 0000                   .dbfile C:\chendong\MYDOCU~1\code\LCD_DI~1\LCD_DI~1\LCD_DI~1\boardcommunication.c
 0000                   .dbfunc e BoardUART _BoardUART fV
 0000           ;         rxdata -> X+0
 0000           _BoardUART::
 0000                   .dbline -1
 0000 10                push X
 0001 4F                mov X,SP
 0002 3801              add SP,1
 0004                   .dbline 5
 0004           ; #include <m8c.h>        // part specific constants and macros
 0004           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0004           ; 
 0004           ; void BoardUART(void )//board communication rx interrupt
 0004           ; {
 0004                   .dbline 8
 0004           ;       unsigned char rxdata;
 0004           ;       
 0004           ;       rxdata = UART_Board_bReadRxData();
 0004 10                push X
 0005 7C0000            xcall _UART_Board_bReadRxData
 0008 20                pop X
 0009 62D000            mov REG[0xd0],>__r0
 000C 5400              mov [X+0],A
 000E           L2:
 000E                   .dbline 10
 000E           ;       //echo
 000E           ;       while (!(UART_Board_bReadTxStatus() & UART_TX_BUFFER_EMPTY));
 000E           L3:
 000E                   .dbline 10
 000E 10                push X
 000F 7C0000            xcall _UART_Board_bReadTxStatus
 0012 20                pop X
 0013 62D000            mov REG[0xd0],>__r0
 0016 5300              mov [__r0],A
 0018 470010            tst [__r0],16
 001B AFF2              jz L2
 001D                   .dbline 11
 001D           ;       UART_Board_SendData(rxdata);
 001D 10                push X
 001E 5200              mov A,[X+0]
 0020 7C0000            xcall _UART_Board_SendData
 0023 20                pop X
 0024                   .dbline -2
 0024           L1:
 0024 38FF              add SP,-1
 0026 20                pop X
 0027                   .dbline 0 ; func end
 0027 7F                ret
 0028                   .dbsym l rxdata 0 c
 0028                   .dbend
