

HI-TECH Software Macro Assembler (PSoC MCU) V9.61
                                                                                                           Wed Jun 17 09:40:08 2015


     1                          
     2                          	; HI-TECH C COMPILER (Cypress PSOC) V9.61
     3                          	; Copyright (C) 1984-2008 HI-TECH Software
     4                          	;Serial no. HCPSOC-679591
     5                          
     6                          	; Auto-generated runtime startup code for final link stage.
     7                          
     8                          	;
     9                          	; Compiler options:
    10                          	;
    11                          	; --asmlist --errformat --chip=CY8C22345 --WARN=0 --OPT=asm,9 \
    12                          	; -OLCD_display -Moutput/LCD_display.mp --OUTDIR=./output \
    13                          	; ./obj/boot.obj ./obj/boardcommunication.p1 ./obj/ht1621b.p1 \
    14                          	; ./obj/humichipii.p1 ./obj/lcd.p1 ./obj/main.p1 \
    15                          	; ./obj/particlesensor.p1 ./obj/si7020.p1 ./obj/software_iic.p1 \
    16                          	; lib/libpsoc.lib lib/libpsoc.lpp \
    17                          	; D:/Cypress/PSOCDE~1/5.4/Common/CY110F~1/tools/lib/CY8C22045/cms.lib
    18                          	;
    19                          
    20                          
    21                          	processor	CY8C22345
    22                          	macro	M8C_ClearWDT
    23                          	mov reg[0xE3],0x38
    24  306F                    	endm
    25                          
    26                          	psect	PD_startup,class=CODE
    27                          	psect	init,class=CODE
    28                          	psect	end_init,class=CODE
    29                          	psect	powerup,class=CODE
    30                          	psect	vectors,ovrld,class=CODE
    31                          	psect	text,class=CODE
    32                          	psect	maintext,class=CODE
    33                          	psect	intrtext,class=CODE
    34                          	psect	fnauto,class=RAM,space=1
    35                          	psect	bss,class=RAM,space=1
    36                          	psect	InterruptRAM,class=RAM,space=1
    37                          	psect	cdata,class=ROM,space=0,reloc=256
    38                          	psect	psoc_config,class=ROM
    39                          	psect	UserModules,class=ROM
    40                          	psect	strings,class=ROM
    41                          	psect	SSCParmBlk,abs,ovrld,class=RAM,space=1
    42  00F8                    	org	0xF8
    43  00F8                    	blk	8
    44                          
    45                          	psect	stackps,class=RAM
    46                          	global	__Lstackps, __stack_start__
    47  0300                    __stack_start__:
    48                          	psect	bss0,class=RAM,space=1
    49                          	psect	nvram0,class=RAM,space=1
    50                          	psect	rbit0,bit,class=RAM,space=1
    51                          	psect	nvbit0,bit,class=RAM,space=1
    52                          	psect	ramdata0,class=RAM,space=1
    53                          	psect	romdata0,class=BANKROM,space=0
    54                          	psect	bss1,class=RAM,space=1
    55                          	psect	nvram1,class=RAM,space=1
    56                          	psect	rbit1,bit,class=RAM,space=1
    57                          	psect	nvbit1,bit,class=RAM,space=1
    58                          	psect	ramdata1,class=RAM,space=1
    59                          	psect	romdata1,class=BANKROM,space=0
    60                          	psect	bss2,class=RAM,space=1
    61                          	psect	nvram2,class=RAM,space=1
    62                          	psect	rbit2,bit,class=RAM,space=1
    63                          	psect	nvbit2,bit,class=RAM,space=1
    64                          	psect	ramdata2,class=RAM,space=1
    65                          	psect	romdata2,class=BANKROM,space=0
    66                          	psect	bss3,class=RAM,space=1
    67                          	psect	nvram3,class=RAM,space=1
    68                          	psect	rbit3,bit,class=RAM,space=1
    69                          	psect	nvbit3,bit,class=RAM,space=1
    70                          	psect	ramdata3,class=RAM,space=1
    71                          	psect	romdata3,class=BANKROM,space=0
    72                          
    73                          	global	start,startup,_main
    74                          	global	reset_vec,intlevel0,intlevel1,intlevel2
    75  0003                    intlevel0:
    76  0003                    intlevel1:
    77  0003                    intlevel2:		; for C funcs called from assembler
    78                          
    79                          	fnconf	fnauto,??,?
    80                          	fnroot	_main
    81  006C                    TMP_DR0	equ	108
    82  006D                    TMP_DR1	equ	109
    83  006E                    TMP_DR2	equ	110
    84  006F                    TMP_DR3	equ	111
    85  00D0                    CUR_PP	equ	208
    86  00D1                    STK_PP	equ	209
    87  00D3                    IDX_PP	equ	211
    88  00D4                    MVR_PP	equ	212
    89  00D5                    MVW_PP	equ	213
    90  00F7                    CPU_F	equ	247
    91                          	psect	vectors
    92  0000                    reset_vec:
    93  0000                    start:
    94                          	global	__Start
    95  0000  7D 3F13           	ljmp	__Start
    96                          
    97                          	psect	init
    98  3F6D                    startup:
    99  3F6D  62 E3 38          	M8C_ClearWDT
   100  3F70  71 80             	or	f, 0x80	;select multiple RAM page mode
   101  3F72  70 BF             	and	f, 0xBF
   102                          
   103                          ;	Clear uninitialized variables in bank 0
   104                          	global	__Lbss0
   105  3F74  62 D1 00          	mov	reg[STK_PP],0
   106  3F77  50 00             	mov	a,low __Lbss0
   107  3F79  4E                	swap	a,sp
   108  3F7A  50 00             	mov	a,0
   109  3F7C  57 61             	mov	x,97
   110  3F7E                    bssloop0:
   111  3F7E  08                	push	a
   112  3F7F  79                	dec	x
   113  3F80  BFFD              	jnz	bssloop0
   114                          
   115                          ;	Copy initialized data into bank 0
   116                          	global	__Lromdata0,__Lramdata0
   117  3F82  57 65             	mov	x,low __Lromdata0
   118  3F84  50 61             	mov	a,low __Lramdata0
   119  3F86  4E                	swap	a,sp
   120  3F87                    dataloop0:
   121  3F87  50 00             	mov	a,high __Lromdata0
   122  3F89  28                	romx
   123  3F8A  08                	push	a
   124  3F8B  75                	inc	x
   125  3F8C  5B                		mov	a,x
   126  3F8D  39 6C             cmp	a,low (__Lromdata0+7)
   127  3F8F  BFF7              	jnz	dataloop0
   128  3F91  62 D0 00          	mov	reg[CUR_PP],0
   129  3F94  62 D1 03          	mov	reg[STK_PP],3
   130  3F97  50 00             	mov	a,low __Lstackps
   131  3F99  4E                	swap	a,sp
   132                          
   133  3F9A  7D 3CA7           	ljmp	_main


HI-TECH Software Macro Assembler (PSoC MCU) V9.61
Symbol Table                                                                                               Wed Jun 17 09:40:08 2015

    __Lramdata0 0061       __Lstackps 0300      __Lromdata0 0065            _main 3CA7            start 0000        dataloop0 3F87  
         CUR_PP 00D0           STK_PP 00D1        intlevel0 0003        intlevel1 0003        intlevel2 0003        reset_vec 0000  
       bssloop0 3F7E          __Lbss0 0000          __Start 3F13          startup 3F6D  __stack_start__ 0300  
